[{"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js":"1","/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js":"2","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js":"3","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js":"4","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Profile.js":"5","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/About.js":"6","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/Contacts.js":"7","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignUp.js":"8","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignIn.js":"9","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js":"10","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js":"11","/home/vladimir/PycharmProjects/promotion_system/frontend/src/hocs/Layout.js":"12","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js":"13","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/Chat.js":"14","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js":"15","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js":"16","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js":"17","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js":"18","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/websocket.js":"19","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js":"20","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/StartedPage.js":"21","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js":"22","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/NavBar.js":"23","/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js":"24","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js":"25","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js":"26","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/chat.js":"27","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notifications.js":"28","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileTabs.js":"29","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Chat.js":"30","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/UserTasks.js":"31","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notification.js":"32","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileEditTab.js":"33","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NavBar.js":"34","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ReviewCreateModal.js":"35","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/Stats.js":"36","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/BarChart.js":"37","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/LineChart.js":"38","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/PieChart.js":"39"},{"size":478,"mtime":1621195356786,"results":"40","hashOfConfig":"41"},{"size":2171,"mtime":1623605213638,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1610468760874,"results":"43","hashOfConfig":"41"},{"size":120,"mtime":1619353835055,"results":"44","hashOfConfig":"41"},{"size":5782,"mtime":1621112607111,"results":"45","hashOfConfig":"41"},{"size":110,"mtime":1619354089558,"results":"46","hashOfConfig":"41"},{"size":119,"mtime":1619354089550,"results":"47","hashOfConfig":"41"},{"size":3811,"mtime":1623605213654,"results":"48","hashOfConfig":"41"},{"size":2575,"mtime":1623605213598,"results":"49","hashOfConfig":"41"},{"size":3749,"mtime":1623604890967,"results":"50","hashOfConfig":"41"},{"size":10943,"mtime":1623604890923,"results":"51","hashOfConfig":"41"},{"size":440,"mtime":1623605213630,"results":"52","hashOfConfig":"41"},{"size":8838,"mtime":1623604890903,"results":"53","hashOfConfig":"41"},{"size":8559,"mtime":1620230676164,"results":"54","hashOfConfig":"41"},{"size":1500,"mtime":1623604890891,"results":"55","hashOfConfig":"41"},{"size":3480,"mtime":1623604890975,"results":"56","hashOfConfig":"41"},{"size":2548,"mtime":1623604890911,"results":"57","hashOfConfig":"41"},{"size":2513,"mtime":1623604890883,"results":"58","hashOfConfig":"41"},{"size":2490,"mtime":1620126105924,"results":"59","hashOfConfig":"41"},{"size":1601,"mtime":1620158942738,"results":"60","hashOfConfig":"41"},{"size":280,"mtime":1621072635500,"results":"61","hashOfConfig":"41"},{"size":483,"mtime":1620159804838,"results":"62","hashOfConfig":"41"},{"size":581,"mtime":1621072202422,"results":"63","hashOfConfig":"41"},{"size":385,"mtime":1621198652938,"results":"64","hashOfConfig":"41"},{"size":153,"mtime":1620160667121,"results":"65","hashOfConfig":"41"},{"size":1404,"mtime":1623605213646,"results":"66","hashOfConfig":"41"},{"size":822,"mtime":1621198366093,"results":"67","hashOfConfig":"41"},{"size":1992,"mtime":1623604890951,"results":"68","hashOfConfig":"41"},{"size":3447,"mtime":1623604890871,"results":"69","hashOfConfig":"41"},{"size":10398,"mtime":1623605213618,"results":"70","hashOfConfig":"41"},{"size":10692,"mtime":1623604890983,"results":"71","hashOfConfig":"41"},{"size":6791,"mtime":1623604890959,"results":"72","hashOfConfig":"41"},{"size":4784,"mtime":1623604890931,"results":"73","hashOfConfig":"41"},{"size":2378,"mtime":1623604890943,"results":"74","hashOfConfig":"41"},{"size":3324,"mtime":1621366756797,"results":"75","hashOfConfig":"41"},{"size":2409,"mtime":1623605557379,"results":"76","hashOfConfig":"41"},{"size":1013,"mtime":1623605610974,"results":"77","hashOfConfig":"41"},{"size":748,"mtime":1621367799848,"results":"78","hashOfConfig":"41"},{"size":1303,"mtime":1623605610958,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"mnbbjl",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"82"},"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js",[],["179","180"],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Profile.js",["181","182"],"import React, {useEffect, useState} from \"react\";\nimport \"./Profile.css\"\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nconst Profile = () => {\n    const [profile, setProfile] = useState({\n        email: '',\n        phone: '',\n        first_name: '',\n        last_name: '',\n        password: ''\n    })\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const userEmail = localStorage.getItem('email')\n\n    useEffect(() => {\n        const fetchProfileDetail = () => {\n            axios.get(`http://localhost:8000/api/accounts/${userEmail}`, config).then(response => {\n                setProfile(response.data)\n                console.log(response.data)\n                console.log('Profile received successfully')\n            }).catch(error => {\n                console.log('Profile received fail')\n            })\n        }\n        fetchProfileDetail()\n    }, [])\n\n    const { email, phone, first_name, last_name, password } = profile\n\n    const onChange = event => setProfile({...profile, [event.target.name]: event.target.value})\n    const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n            if (key === 'phone' && value.substr(0, 0) === '8') {\n                obj.phone = '+7' + value.substr(2)\n            }\n        })\n    }\n    const onSubmit = event => {\n        event.preventDefault()\n        clear(profile)\n        const body = JSON.stringify(profile)\n        axios.put(`http://localhost:8000/api/accounts/update/${userEmail}`, body, config).then(response => {\n            console.log('Profile updated successfully')\n            setProfile(response.data)\n        }).catch(error => {\n            console.log('Profile updated fail')\n        })\n    }\n\n    return (\n        <div className=\"profile\">\n            <div className=\"profile__header\">\n                <div className=\"header__title\">\n                    My Profile\n                </div>\n            </div>\n            <div className=\"profile__tabs\">\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Edit Profile</Link>\n                </div>\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Chats</Link>\n                </div>\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Stats</Link>\n                </div>\n            </div>\n            <form className=\"edit__profile\" onSubmit={event => onSubmit(event)}>\n                <div className=\"tab__name\">\n                    Edit Profile\n                </div>\n                <div className=\"avatar\">\n                    <img src=\"\"/>\n                </div>\n                <div className=\"edit__name\">\n                    <div className=\"edit__name__block1\">\n                        <label className=\"edit__name__label\">\n                            First Name\n                            <input className=\"edit__name__input\"\n                                   placeholder={profile.first_name}\n                                   name='first_name'\n                                   value={first_name}\n                                   onChange={event => onChange(event)}/>\n                        </label>\n                    </div>\n                    <div className=\"edit__name__block2\">\n                        <label className=\"edit__name__label\">\n                            Last Name\n                            <input className=\"edit__name__input\"\n                                   placeholder={profile.last_name}\n                                   name='last_name'\n                                   value={last_name}\n                                   onChange={event => onChange(event)}/>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"edit__email\">\n                    <label className=\"edit__email__label\">\n                        Edit Email <br/>\n                        <input className=\"edit__email__input\"\n                               placeholder={profile.email}\n                               name='email'\n                               value={email}\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"edit__phone\">\n                    <label className=\"edit__phone__label\">\n                        Edit Phone <br/>\n                        <input className=\"edit__phone__input\"\n                               placeholder={profile.phone}\n                               name='phone'\n                               value={phone}\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"edit__password\">\n                    <label className=\"edit__password__label\">\n                        Edit Password <br/>\n                        <input className=\"edit__password__input\"\n                               type=\"password\"\n                               name='password'\n                               value={password}\n                               placeholder='password'\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"profile__save__button__block\">\n                    <button className=\"profile__save__button\" type='submit'>Save</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Profile\n\n\n",["183","184"],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/About.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/Contacts.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignUp.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignIn.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js",["185"],"import React, {useState} from \"react\";\nimport \"./TaskCreate.css\"\nimport axios from \"axios\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, TextareaAutosize, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        gridArea: 'content',\n        width: '100%',\n        marginTop: '2%',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90%',\n        marginLeft: '2%'\n    },\n    inputs: {\n        display: 'flex',\n        marginTop: '2%',\n        marginBottom: '2%'\n    },\n    input: {\n        width: '100%',\n        marginBottom: '2%'\n    },\n    left: {\n\n    },\n    right: {\n\n    },\n    button: {\n        width: '20%',\n        marginLeft: '40%'\n    },\n    textarea: {\n        borderRadius: '5px',\n        outline: 'none'\n    }\n\n}))\n\n\nconst TaskCreate = () => {\n    const classes = useStyles()\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: '',\n        customer: localStorage.getItem('id')\n    })\n\n    const { title, description, deadline, payment, customer } = formData\n\n    const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n    const onSubmit = event => {\n        event.preventDefault()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n        const body = JSON.stringify(formData)\n        axios.post('http://localhost:8000/api/tasks/create', body, config).then(response => {\n            console.log('success')\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            {/*<div className=\"task__create__header\">*/}\n            {/*    <div className=\"task__create__header__title\">*/}\n            {/*        Create New Task*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n\n            <form className={classes.form} onSubmit={event => onSubmit(event)}>\n                <TextField className={classes.input}\n                           label=\"title\"\n                           name='title'\n                           value={title}\n                           onChange={event => onChange(event)}/>\n                <TextareaAutosize className={classes.textarea}\n                                  rows={20}\n                                  placeholder=\"description\"\n                                  name='description'\n                                  value={description}\n                                  onChange={event => onChange(event)}/>\n                <div className={classes.inputs}>\n                    <TextField className={classes.input}\n                               variant='outlined'\n                               label=\"deadline\"\n                               name='deadline'\n                               value={deadline}\n                               onChange={event => onChange(event)}/>\n                    <TextField className={classes.input}\n                               variant='outlined'\n                               label=\"payment\"\n                               name='payment'\n                               value={payment}\n                               onChange={event => onChange(event)}/>\n                </div>\n                <Button variant='contained'\n                        color='primary'\n                        type=\"submit\"\n                        className={classes.button}>\n                    Create New Task\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default TaskCreate\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js",["186"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./TaskDetail.css\"\nimport Reply from \"./Reply\";\nimport {Button, InputLabel, makeStyles, TextareaAutosize, TextField} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        marginLeft: '30%',\n        width: '60%',\n        marginBottom: '2%'\n    },\n    customer: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    customerLabel: {\n        fontWeight: 'bold',\n        margin: '5px'\n    },\n    labels: {\n        display: 'inline-flex',\n    },\n    label: {\n        margin: '2%'\n    },\n    description: {\n        width: '50%'\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'flex-start'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        width: '50%'\n    },\n    textarea: {\n        outline: 'none',\n        marginBottom: '4%',\n        borderRadius: '5px'\n    },\n    replies: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    relyButton: {\n        display: 'flex',\n        width: '50%',\n        marginLeft: '25%'\n    },\n    editForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '50%'\n    },\n    editButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center'\n    },\n    editButton: {\n        width: '50%',\n        marginBottom: '2%',\n        marginTop: '2%'\n    },\n    field: {\n        display: 'flex',\n        margin: '3% 0 3%'\n    }\n}))\n\n\nconst TaskDetail = (props) => {\n    const classes = useStyles()\n    const [replies, setReplies] = useState([])\n    const [taskDetail, setTaskDetail] = useState({})\n    const [customer, setCustomer] = useState({})\n    const [isEditable, setIsEditable] = useState(false)\n    const [submitType, setSubmitType] = useState('')\n    const [formData, setFormData] = useState({\n        content: '',\n        send_date: '',\n        from_user: 0,\n        task: 0\n    })\n    const [editFormData, setEditFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: '',\n        performer: taskDetail.performer,\n        customer: taskDetail.customer\n    })\n\n    const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n    const { title, description, deadline, payment } = editFormData\n\n    const { content } = formData\n\n    const onChange = event => {\n        setFormData({...formData, [event.target.name]: event.target.value})\n    }\n\n    const onEditFormChange = event => {\n        setEditFormData({...editFormData, [event.target.name]: event.target.value})\n    }\n\n    const onSubmit = event => {\n        const send_date = new Date().getUTCDate()\n        const task = taskDetail.id\n        const from_user = localStorage.getItem('id')\n        const body = JSON.stringify({ content, send_date, from_user, task })\n\n        axios.post('http://localhost:8000/api/tasks/reply/create', body, config).then(response => {\n            console.log('Success reply post')\n            console.log(response)\n        }).catch(error => {\n            console.log('Error reply post')\n        })\n    }\n\n    const handleEditButton = event => setIsEditable(!isEditable)\n\n    const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n        })\n    }\n\n    const handleEditDeleteTask = event => {\n        event.preventDefault()\n        clear(editFormData)\n        const body = JSON.stringify(editFormData)\n        const slug = window.location.pathname.split('/').pop()\n\n        if (submitType === 'delete') {\n            axios.delete(`http://localhost:8000/api/tasks/delete/${slug}`, config).then(response => {\n                console.log('Deleted task successfully')\n            }).catch(error => {\n                console.log('Deleted task failed')\n            })\n        } else {\n            axios.put(`http://localhost:8000/api/tasks/update/${slug}`, body, config).then(response => {\n                setTaskDetail(response.data)\n                console.log('Updated task successfully')\n            }).catch(error => {\n                console.log('Updated task failed')\n            })\n        }\n    }\n\n    useEffect(() => {\n        const fetchTaskDetail = () => {\n            const slug = props.match ? props.match.params.slug : props.slug\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            }\n            axios.get(`http://localhost:8000/api/tasks/${slug}`, config).then(response => {\n                setTaskDetail(response.data)\n                setCustomer(response.data.customer)\n                setReplies(response.data.replies)\n                console.log(customer)\n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        fetchTaskDetail()\n    }, [])\n\n    const displayReplies = () => {\n        let displayedReplies = []\n        console.log(replies)\n        replies.map(reply => {\n            return displayedReplies.push(\n                <Reply send_date={reply.send_date}\n                       content={reply.content}\n                       last_name={reply.from_user.last_name}\n                       first_name={reply.from_user.first_name}/>\n            )\n        })\n        return displayedReplies\n    }\n    console.log(taskDetail.description)\n    return (\n        <div className={classes.root}>\n            <div className={classes.customer}>\n                <InputLabel className={classes.customerLabel}>{customer.email}</InputLabel>\n                <InputLabel className={classes.customerLabel}>{customer.first_name} {customer.last_name}</InputLabel>\n            </div>\n            <div className={classes.labels}>\n                <InputLabel className={`${classes.label} ${classes.left}`}>\n                    Published: {taskDetail.published_date}\n                </InputLabel>\n                <InputLabel className={`${classes.label} ${classes.right}`}>Deadline: {taskDetail.deadline}</InputLabel>\n            </div>\n            <Box textAlign='justify'\n                 fontWeight='bold'\n                 fontSize={18}\n                 className={classes.description}>\n                {taskDetail.description}\n            </Box>\n            <div className={classes.labels}>\n                <InputLabel className={classes.label}>Status: {taskDetail.status}</InputLabel>\n                <InputLabel className={classes.label}>Payment: {taskDetail.payment}</InputLabel>\n            </div>\n            {\n                customer.email === localStorage.getItem('email') ? (\n                    <Button className={classes.editButton}\n                            variant='contained'\n                            color='primary'\n                            onClick={event => handleEditButton(event)}>Edit</Button>\n                ) : null\n            }\n            {\n                isEditable ? (\n                    <form className={classes.editForm} onSubmit={event => handleEditDeleteTask(event)}>\n                        <TextField className={classes.field}\n                                   placeholder='title'\n                                   name='title'\n                                   value={title}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <TextareaAutosize className={classes.textarea}\n                                          rows={10}\n                                          placeholder='description'\n                                          name='description'\n                                          value={description}\n                                          onChange={event => onEditFormChange(event)}/>\n                        <TextField className={classes.field}\n                                   placeholder='payment'\n                                   name='payment'\n                                   value={payment}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <TextField className={classes.field}\n                                   placeholder='deadline'\n                                   name='deadline'\n                                   value={deadline}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <div className={classes.editButtons}>\n                            <Button variant='contained'\n                                    color='primary'\n                                    className={classes.editButton}\n                                    type='submit'\n                                    onClick={event => setSubmitType('update')}>\n                            Update\n                            </Button>\n                            <Button variant='contained'\n                                    color='secondary'\n                                    className={classes.editButton}\n                                    type='submit'\n                                    onClick={event => setSubmitType('delete')}>\n                            Delete\n                            </Button>\n                        </div>\n                    </form>\n                ) : null\n            }\n            {\n                localStorage.getItem('email') === customer.email ||\n                (taskDetail.performer && taskDetail.performer.email === localStorage.getItem('email')) ? null : (\n                    <form className={classes.form} onSubmit={event => onSubmit(event)}>\n                        <TextareaAutosize rows={10}\n                                          className={classes.textarea}\n                                          placeholder='type your reply'\n                                          name='content'\n                                          value={content}\n                                          onChange={event => onChange(event)}/>\n                        <Button variant='contained'\n                                color='primary'\n                                type='submit'\n                                className={classes.relyButton}>\n                            Send\n                        </Button>\n                    </form>\n                )\n            }\n            <div className={classes.replies}>\n                {displayReplies()}\n            </div>\n        </div>\n\n    )\n}\n\nexport default TaskDetail\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/hocs/Layout.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js",["187","188","189"],"import React, {useEffect, useState} from \"react\";\nimport \"./TasksList.css\"\nimport axios from \"axios\";\nimport Task from \"./Task\";\nimport Pagination from \"../Pagination\";\nimport {Checkbox, InputLabel, makeStyles, MenuItem, Select, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '50%',\n        height: '100%',\n        justifyContent: 'center',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 2px 4px -2px blue',\n        marginLeft: '25%',\n        borderTop: 'none',\n    },\n    form: {\n        width: '50%',\n        height: '30%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '25%',\n        marginTop: '3%',\n        border: '1px solid blue',\n        boxShadow: '0 0 10px'\n\n    },\n\n    filters: {\n        padding: '30px',\n\n    },\n    filterLabel: {\n\n    },\n    selects: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'center',\n    },\n    select: {\n        margin: '10px',\n        width: '50%'\n    },\n    option: {\n\n\n    },\n    inputs: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '10px',\n\n    },\n    input: {\n        marginLeft: '15px',\n        marginRight: '15px'\n    },\n    label: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    checkbox_block: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    search: {\n        display: 'flex',\n\n    },\n    search_line: {\n        display: 'flex',\n        width: '100%'\n    }\n}))\n\n\nconst TasksList = () => {\n    const [tasks, setTasks] = useState([])\n    const [count, setCount] = useState(0)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [nextPage, setNextPage] = useState('')\n    const [previousPage, setPreviousPage] = useState('')\n    const [filters, setFilters] = useState({\n        title: '',\n        status: '',\n        payment: '',\n        deadline: '',\n        publication_date: '',\n        email: ''\n    })\n    const classes = useStyles()\n    const {title, status, payment, deadline, publication_date, email} = filters\n\n    useEffect(() => {\n        const fetchTasks = () => {\n            axios.get(\n                    `http://localhost:8000/api/tasks/?status=${status}&title=${title}&payment=${payment}&deadline=${deadline}&publication_date=${publication_date}&customer__email=${email}`\n            ).then(response => {\n                setTasks(response.data.results)\n                setCount(response.data.count)\n                setNextPage(response.data.next)\n                console.log(filters)\n                setPreviousPage(response.data.previous)\n            }).catch(error => {\n                console.log('Fetch tasks error')\n            })\n        }\n        fetchTasks()\n    }, [filters])\n\n    const onSubmit = event => {\n        event.preventDefault()\n    }\n\n    const onChange = event => setFilters({...filters, [event.target.name]: event.target.value})\n\n    const handleCheckbox = event => {\n        if (filters.email) {\n            setFilters({...filters, email: ''})\n        } else {\n            setFilters({...filters, email: localStorage.getItem('email')})\n        }\n    }\n\n    const displayTasks = () => {\n        let displayedTasks = []\n        tasks.map(task => {\n            return displayedTasks.push(\n                <Task\n                    slug={task.slug}\n                    title={task.title}\n                    payment={task.payment}\n                    description={task.description}\n                    published_date={task.published_date}\n                    deadline={task.deadline}\n                    status={task.status}\n                />\n            )\n        })\n        return displayedTasks\n    }\n\n    const showNextPage = () => {\n        axios.get(nextPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (nextPage) {\n                setCurrentPage(currentPage + 1)\n            }\n            console.log(response.data)\n        }).catch(error => {\n            console.log('ShowNextPage error')\n        })\n    }\n\n    const showPrevPage = () => {\n        axios.get(previousPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (previousPage) {\n                setCurrentPage(currentPage - 1)\n            }\n        }).catch(error => {\n            console.log('ShowPreviousPage error')\n        })\n    }\n\n    const changePage = page => {\n        axios.get(`http://localhost:8000/api/tasks/?page=${page}`).then(response => {\n            setTasks(response.data.results)\n            setCount(response.data.count)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            setCurrentPage(page)\n        }).catch(error => {\n            console.log('ChangePage error')\n        })\n    }\n\n\n    return (\n        <div className=\"tasks__list\">\n            <div className=\"tasks__list__header\">\n                <div className=\"tasks__list__header__title\">\n                    Tasks List\n                </div>\n            </div>\n\n            <form className={classes.root}>\n                <div className={classes.filters}>\n                    <div className={classes.selects}>\n                        <InputLabel id='status-label' className={classes.label}>Status</InputLabel>\n                        <Select labelId='status-label'\n                                className={classes.select}\n                                name='status'\n                                value={status}\n                                onChange={event => onChange(event)}>\n                            <MenuItem className={classes.option} value='open'>open</MenuItem>\n                            <MenuItem className={classes.option} value='done'>done</MenuItem>\n                            <MenuItem className={classes.option} value='in_process'>in_process</MenuItem>\n                        </Select>\n\n                        <InputLabel className={classes.label}>Payment</InputLabel>\n                        <Select className={classes.select}\n                                name='payment'\n                                value={payment}\n                                onChange={event => onChange(event)}>\n                            <MenuItem className={classes.option} value='0+'>0+</MenuItem>\n                            <MenuItem className={classes.option} value='1000+'>1000+</MenuItem>\n                            <MenuItem className={classes.option} value='2000+'>2000+</MenuItem>\n                            <MenuItem className={classes.option} value='5000+'>5000+</MenuItem>\n                            <MenuItem className={classes.option} value='10000+'>10000+</MenuItem>\n                            <MenuItem className={classes.option} value='25000+'>25000+</MenuItem>\n                        </Select>\n                    </div>\n\n                    <div className={classes.inputs}>\n                        <InputLabel className={classes.label}>Publication Date</InputLabel>\n                        <TextField className={classes.input}\n                                   name='publication_date'\n                                   value={publication_date}\n                                   onChange={event => onChange(event)}/>\n                        <InputLabel className={classes.label}>Deadline</InputLabel>\n                        <TextField className={classes.input}\n                                   name='deadline'\n                                   value={deadline}\n                                   onChange={event => onChange(event)}/>\n                    </div>\n                    <div className={classes.checkbox_block}>\n                        <InputLabel className={classes.label}>My tasks</InputLabel>\n                        <Checkbox name='email' value={email} onChange={event => onChange(event)}/>\n                    </div>\n                    <div className={classes.search}>\n                        <TextField label='Search'\n                                   className={classes.search_line}\n                                   name='title' value={title}\n                                   onChange={event => onChange(event)}/>\n                    </div>\n                </div>\n            </form>\n            {displayTasks()}\n            <Pagination count={count}\n                        itemsPerPage={3}\n                        currentPage={currentPage}\n                        changePage={changePage}\n                        nextPage={showNextPage}\n                        prevPage={showPrevPage}\n            />\n        </div>\n    )\n}\n\nexport default TasksList\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/Chat.js",["190","191","192","193","194","195","196","197","198","199","200"],"import React, {Component, useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon, MDBBtn }\n    from \"mdbreact\";\nimport \"./Chat.css\"\nimport axios from \"axios\";\nimport WebSocketInstance from \"./websocket\";\n\n\nconst data = {\nfriends: [\n{\nname: \"John Doe\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-8\",\nmessage: \"Hello, Are you there?\",\nwhen: \"Just now\",\ntoRespond: 1,\nseen: false,\nactive: true\n},\n{\nname: \"Danny Smith\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-1\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Alex Steward\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-2\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Ashley Olsen\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-3\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Kate Moss\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-4\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: true,\nactive: false\n},\n{\nname: \"Lara Croft\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Brad Pitt\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: true,\nactive: false\n},\n{\nname: \"Ken Ditto\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/img(3).jpg\",\nmessage: \"Hello, Are you there?\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Marta Wozniak\",\nmessage: \"Lorem ipsum dolor sit.\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/img(2).jpg\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: false,\nactive: false\n}\n],\nmessages: [\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"12 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n},\n{\nauthor: \"Lara Croft\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"13 mins ago\",\nmessage:\n\" Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n},\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"14 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n},\n{\nauthor: \"Lara Croft\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"16 mins ago\",\nmessage:\n\" Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n},\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"17 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n}\n]\n}\n\n\nclass Chat3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n}\n\n\n\nconst Chat2 = ({ setChats, messages, members }) => {\n    const [message, setMessage] = useState('')\n    const { id } = useParams()\n    const email = localStorage.getItem('email')\n    const token = localStorage.getItem('token')\n    useEffect(() => {\n        setChats(email, token)\n    }, [id])\n\n    const renderMessages = messages => {\n        return (\n            <MDBListGroup className=\"list-unstyled pl-3 pr-3\">\n                {messages.map(message => (\n                    <Message2 key={message.from_user.id + message.send_date}\n                              first_name={message.from_user.first_name}\n                              last_name={message.from_user.last_name}\n                              send_date={message.send_date}\n                              content={message.content}\n                    />\n                    //<Message key={message.from_user + message.send_date} message={message} />\n                ))}\n            </MDBListGroup>\n        )\n    }\n\n    const sendMessageHandler = event => {\n        event.preventDefault()\n        const messageObj = {\n            from_user: email,\n            content: message,\n\n        }\n    }\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\n\nconst Message2 = ({ first_name, last_name, send_date, content }) => {\n    return (\n        <li className=\"chat-message d-flex justify-content-between mb-4\">\n            <MDBCard>\n              <MDBCardBody>\n                <div>\n                  <strong className=\"primary-font\">{first_name} {last_name}</strong>\n                  <small className=\"pull-right text-muted\">\n                    <i className=\"far fa-clock\" /> {send_date}\n                  </small>\n                </div>\n                <hr />\n                <p className=\"mb-0\">{content}</p>\n              </MDBCardBody>\n            </MDBCard>\n        </li>\n    )\n}\n\n\n\n\nconst Chat = () => {\n    //const data = props\n\n    return (\n        <MDBCard className=\"grey lighten-3 chat-room\">\n        <MDBCardBody>\n             <MDBRow className=\"px-lg-2 px-2\">\n                 <MDBCol md=\"6\" xl=\"4\" className=\"px-0 mb-4 mb-md-0 scrollable-friends-list\">\n                    <h6 className=\"font-weight-bold mb-3 text-lg-left\">Member</h6>\n                      <div className=\"white z-depth-1 p-3\">\n                        <MDBListGroup className=\"friend-list\">\n                          {data.friends.map(friend => (\n                          <User key={friend.name} friend={friend} />\n                          ))}\n                        </MDBListGroup>\n                      </div>\n                 </MDBCol>\n                 <MDBCol md=\"6\" xl=\"8\" className=\"pl-md-3 mt-4 mt-md-0 px-lg-auto\">\n                    <div className=\"scrollable-chat\">\n\n                        <MDBListGroup className=\"list-unstyled pl-3 pr-3\">\n                          {data.messages.map(message => (\n                          <Message key={message.author + message.when} message={message} />\n                          ))}\n                        </MDBListGroup>\n\n                    </div>\n                     <div className=\"form-group basic-textarea\">\n                         <textarea className=\"form-control pl-2 my-0\" id=\"exampleFormControlTextarea2\" rows=\"3\"\n                            placeholder=\"Type your message here...\" />\n                    {/*    <MDBBtn*/}\n                    {/*          color=\"info\"*/}\n                    {/*          rounded*/}\n                    {/*          size=\"sm\"*/}\n                    {/*          className=\"float-right mt-4\"*/}\n                    {/*    >*/}\n                    {/*        Send*/}\n                    {/*</MDBBtn>*/}\n                  </div>\n                </MDBCol>\n              </MDBRow>\n            </MDBCardBody>\n      </MDBCard>\n    )\n}\n\n\n\n\n\nconst Message = ({ message: { author, avatar, when: send_date, message } }) => {\n    return (\n        <li className=\"chat-message d-flex justify-content-between mb-4\">\n\n    <MDBCard>\n      <MDBCardBody>\n        <div>\n          <strong className=\"primary-font\">{author}</strong>\n          <small className=\"pull-right text-muted\">\n            <i className=\"far fa-clock\" /> {send_date}\n          </small>\n        </div>\n        <hr />\n        <p className=\"mb-0\">{message}</p>\n      </MDBCardBody>\n    </MDBCard>\n  </li>\n    )\n}\n\n\nconst User = ({friend: { name, avatar, message, when, toRespond, seen, active }\n}) => {\n    return (\n        <MDBListGroupItem\n    href=\"#!\"\n    className=\"d-flex justify-content-between p-2 border-light\"\n    style={{ backgroundColor: active ? \"#eeeeee\" : \"\" }}\n  >\n\n    <div style={{ fontSize: \"0.95rem\" }}>\n      <strong>{name}</strong>\n      <p className=\"text-muted\">{message}</p>\n    </div>\n    <div>\n      <p className=\"text-muted mb-0\" style={{ fontSize: \"0.75rem\" }}>\n        {when}\n      </p>\n      {seen ? (\n        <span className=\"text-muted float-right\">\n          <MDBIcon className=\"fa-check\" aria-hidden=\"true\" />\n        </span>\n      ) : toRespond ? (\n        <MDBBadge color=\"danger\" className=\"float-right\">\n          {toRespond}\n        </MDBBadge>\n      ) : (\n        <span className=\"text-muted float-right\">\n          <MDBIcon icon=\"reply\" aria-hidden=\"true\" />\n        </span>\n      )}\n    </div>\n  </MDBListGroupItem>\n    )\n}\n\nexport default Chat\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js",["201"],"import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./SideBar.css\"\nimport {makeStyles} from \"@material-ui/core\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        height: '100%',\n        width: '11%',\n        position: 'fixed',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 3px 10px -2px blue',\n    },\n    items: {\n        backgroundColor: 'white'\n    },\n    item: {\n        display: 'flex',\n        margin: '5%',\n        justifyContent: 'start',\n    },\n    link: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        marginBottom: '10%',\n        fontSize: '22px',\n        marginTop: '15%',\n        color: 'black',\n        '&:hover': {\n            fontSize: '23px',\n            fontWeight: 'bold'\n        },\n    },\n    profileLink: {\n        display: 'flex',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        fontSize: '22px',\n        marginTop: '50%',\n        textAlign: 'center',\n        justifyItems: 'center',\n        color: 'black',\n    },\n    icon: {\n        fontSize: '30px',\n        width: '50px'\n    }\n}))\n\n\nconst SideBar = () => {\n\n    const [showDropdown, setShowDropdown] = useState(true)\n\n    const showDropdownMenu = event => {\n        event.preventDefault()\n        setShowDropdown(!showDropdown)\n    }\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.items}>\n                <div className={classes.item}>\n                    <Link className={classes.profileLink} to=\"/\">\n                        <AccountCircleIcon className={classes.icon}/>Profile\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/tasks\">\n                        <AssignmentIcon className={classes.icon}/>Tasks\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/my_tasks\">\n                        <AssignmentTurnedInIcon className={classes.icon}/>My Tasks\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/tasks/create\">\n                        <CreateIcon className={classes.icon}/>New Task\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/notifications\">\n                        <NotificationsIcon className={classes.icon}/>Notifications\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/chats\">\n                        <ChatIcon className={classes.icon}/>Chats\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/websocket.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/StartedPage.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/NavBar.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js",["202"],"import {\n    SIGN_IN_SUCCESS,\n    SIGN_IN_FAIL,\n    SIGN_UP_SUCCESS,\n    SIGN_UP_FAIL,\n    LOGOUT\n} from \"../actions/types\";\n\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n        case SIGN_IN_SUCCESS:\n            localStorage.setItem('token', payload.access)\n            localStorage.setItem('id', payload.user.id)\n            localStorage.setItem('email', payload.user.email)\n            localStorage.setItem('phone', payload.user.phone)\n            localStorage.setItem('first_name', payload.user.first_name)\n            localStorage.setItem('last_name', payload.user.last_name)\n            return {\n                ...state,\n                token: payload.access,\n                loading: false,\n                isAuthenticated: true\n            }\n        case SIGN_UP_SUCCESS:\n            return {\n                ...state,\n                loading: true,\n                isAuthenticated: false\n            }\n        case SIGN_UP_FAIL:\n        case SIGN_IN_FAIL:\n        case LOGOUT:\n            localStorage.clear()\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: false,\n                token: null\n            }\n        default: return state\n    }\n}\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/chat.js",["203","204"],"import {\n    GET_CHATS_SUCCESS,\n    GET_CHATS_FAIL,\n    ADD_MESSAGE,\n    SET_MESSAGES\n} from \"../../../../promotion_system/frontend/src/actions/types\";\n\n\nconst initialState = {\n    members: [],\n    messages: []\n}\n\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n        case GET_CHATS_SUCCESS:\n            return {\n                ...state,\n                members: payload.members,\n                messages: payload.messages\n            }\n        case ADD_MESSAGE:\n            return {\n                ...state,\n                messages: [...state.messages, payload]\n            }\n        case SET_MESSAGES:\n            return {\n                ...state,\n                messages: payload.reverse()\n            }\n\n        default: return state\n    }\n}\n\n",["205","206"],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notifications.js",["207"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Notification from \"./Notification\";\nimport {makeStyles} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        width: '45%',\n        marginLeft: '25%'\n    }\n}))\n\n\nconst Notifications = () => {\n    const classes = useStyles()\n    const [notifications, setNotifications] = useState([])\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    useEffect(() => {\n        const fetchNotifications = () => {\n            axios.get('http://localhost:8000/api/notifications/', config).then(response => {\n                setNotifications(response.data)\n                console.log(notifications)\n            }).catch(error => {\n\n            })\n        }\n        fetchNotifications()\n    }, [])\n\n\n    const displayNotifications = () => {\n        const displayedNotifications = []\n        notifications.map(notification => {\n            return (\n                displayedNotifications.push(\n                    <Notification id={notification.id}\n                                  task={notification.task}\n                                  from_user={notification.from_user}\n                                  send_date={notification.send_date}\n                                  status={notification.status}\n                                  content={notification.content}\n                                  notifications={notifications}\n                                  notification_type={notification.notification_type}\n                    />\n                )\n            )\n        })\n        return displayedNotifications\n    }\n\n    return (\n        <div className={classes.root}>\n            {displayNotifications()}\n        </div>\n    )\n}\n\nexport default Notifications\n\n\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileTabs.js",["208","209"],"import React, {useEffect, useState} from \"react\";\nimport Stats from \"./stats/Stats\";\nimport \"./ProfileTabs.css\"\nimport ProfileEditTab from \"./ProfileEditTab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tab, Tabs} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        width: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n    },\n    header: {\n        display: 'flex',\n        height: '100%',\n        paddingBottom: '3%',\n        justifyContent: 'start',\n        fontWeight: 'bold',\n        borderBottom: '1px solid'\n    },\n    title: {\n        marginLeft: '2%',\n        fontSize: '25px'\n    },\n    tabs: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '20%',\n        borderRight: '1px solid'\n\n    },\n    tab: {\n        display: 'flex',\n        height: '50px',\n        justifyContent: 'center',\n        fontSize: '18px'\n    },\n    active: {\n        display: 'flex'\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n    },\n    tabContent: {\n        width: '100%',\n        height: '100%'\n    }\n\n}))\n\n\nconst TabContent = props => {\n    const classes = useStyles()\n    const {component, value, index, active, ...other} = props\n\n    return (\n        <div className={classes.tabContent}>\n            {\n                active === value ? component : null\n            }\n        </div>\n    )\n}\n\n\nconst ProfileTabs = () => {\n    const classes = useStyles()\n    const [active, setActive] = useState('editProfile')\n    const handleChange = (event, value) => {\n        if (value === 0) {\n            setActive('editProfile')\n        } else {\n            setActive('stats')\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    My Profile\n                </div>\n            </div>\n            <div className={classes.body}>\n                <Tabs orientation='vertical'\n                      value={active === 'editProfile' ? 0 : 1}\n                      onChange={event => handleChange(event)}\n                      textColor='primary'\n                      indicatorColor='primary'\n                      variant='fullWidth'\n                      className={classes.tabs}>\n                    <Tab className={classes.tab}\n                         onClick={() => setActive('editProfile')}\n                         label='Edit Profile' />\n                    <Tab className={classes.tab}\n                         onClick={() => setActive('stats')}\n                         label='Stats'/>\n                </Tabs>\n                <div className={classes.content}>\n                        <TabContent value='editProfile'\n                                    index={0}\n                                    active={active}\n                                    component={<ProfileEditTab/>}\n                        />\n                        <TabContent value='stats'\n                                    active={active}\n                                    index={1}\n                                    component={<Stats/>}\n                        />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ProfileTabs\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Chat.js",["210","211","212"],"import React, {useEffect, useState} from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport axios from \"axios\";\nimport {Button, InputLabel, makeStyles, Tab, TextareaAutosize, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        gridArea: 'content',\n        flexDirection: 'row',\n        height: '100vh',\n        width: '70%',\n    },\n    message: {\n        border: '2px solid',\n        borderRadius: '9px',\n        margin: '5px',\n        padding: '10px',\n\n        width: '50%'\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        backgroundColor: 'grey',\n        color: 'black'\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        backgroundColor: 'blue',\n        color: 'white'\n    },\n    senderData: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    label: {\n        margin: '0 2% 0',\n        color: 'inherit'\n    },\n    tabs: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRight: '1px solid',\n    },\n    tab: {\n        display: 'flex',\n        width: '100%',\n        borderBottom: '1px solid'\n    },\n    chatBody: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        marginLeft: '10%'\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    messages: {\n        display: 'flex',\n        flexDirection: 'column',\n        border: '1px solid',\n        marginTop: '2%',\n        borderRadius: '7px'\n    },\n    buttons: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: '35%'\n    },\n    button: {\n        width: '20%',\n        margin: '2%'\n    },\n    textarea: {\n        margin: '3% 0 3%',\n        borderRadius: '5px'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    header: {\n        display: 'flex',\n        padding: '4%',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 3px 10px -2px #404040',\n        backgroundColor: '#fff'\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: '27px',\n        color: '#404040',\n    }\n\n\n}))\n\nconst Message = ({ first_name, last_name, email, content }) => {\n    const classes = useStyles()\n    console.log(email)\n    return (\n        <div\n            className={`${classes.message} ${localStorage.getItem('email') === email ? classes.right : classes.left}`}>\n            {content}\n        </div>\n    )\n}\n\n\n\nconst ChatContent = ({chat, active}) => {\n    const classes = useStyles()\n    const companion = localStorage.getItem('id') === chat.creator.id ? chat.second_member : chat.creator\n    const [history, setHistory] = useState([])\n    const [newMessage, setNewMessage] = useState({\n        from_user: localStorage.getItem('id') !== chat.creator.id ? chat.creator : chat.second_member,\n        to_user: localStorage.getItem('id') !== chat.creator.id ? chat.second_member : chat.creator,\n        content: ''\n    })\n\n    const onChange = event => setNewMessage({...newMessage, [event.target.name]: event.target.value})\n    const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chat.name + '/')\n\n    const parseHistory = history => {\n        let parsedHistory = []\n        history.map(message => {\n            console.log(message)\n            return parsedHistory.push({\n                from_user: {\n                    first_name: message.from_user.split(' ')[0].replace(/['\"]+/g, ' '),\n                    last_name: message.from_user.split(' ')[1].replace(/['\"]+/g, ' '),\n                    email: message.from_user.split(' ')[2].replace(/['\"]+/g, ' ')\n                },\n                to_user: {\n                    first_name: message.to_user.split(' ')[0].replace(/['\"]+/g, ' '),\n                    last_name: message.to_user.split(' ')[1].replace(/['\"]+/g, ' '),\n                    email: message.to_user.split(' ')[2].replace(/['\"]+/g, ' ')\n                },\n                content: message.content\n            })\n        })\n        return parsedHistory\n    }\n\n    useEffect(() => {\n        const checkMessages = () => {\n            console.log('USEEFFECT')\n        client.onopen = () => {\n            console.log('Websocket client connected')\n        }\n        client.onmessage = message => {\n            const dataFromServer = JSON.parse(message.data)\n            console.log(dataFromServer)\n            if (dataFromServer.length > 1) {\n                console.log(dataFromServer)\n                setHistory(parseHistory(dataFromServer))\n                console.log(history)\n            } else {\n                console.log('Send message')\n                setHistory([...history, {\n                    from_user: dataFromServer.from_user,\n                    to_user: dataFromServer.to_user,\n                    content: dataFromServer.content,\n                    room_name: chat.name\n                }])\n            }\n            console.log(history)\n        }\n        }\n        checkMessages()\n\n    }, [])\n\n    const fetchHistory = event => {\n        event.preventDefault()\n        console.log(newMessage.to_user)\n        console.log(newMessage.from_user)\n        client.send(JSON.stringify({\n            'type': 'send_chat_history',\n            'from_user': newMessage.from_user,\n            'to_user': newMessage.to_user,\n            'room_name': chat.name\n        }))\n        console.log('Get history')\n    }\n\n    const sendNewMessage = event => {\n        event.preventDefault()\n        console.log(newMessage)\n        setHistory([...history, newMessage])\n        client.send(JSON.stringify({\n            'type': 'send_new_message',\n            'content': newMessage.content,\n            'from_user': newMessage.from_user,\n            'to_user': newMessage.to_user,\n            'room_name': chat.name\n        }))\n    }\n\n    const displayMessages = () => {\n        let displayedMessages = []\n        history.map(message => {\n            console.log(message.from_user.first_name)\n            return displayedMessages.push(\n                <Message first_name={message.from_user.first_name}\n                         last_name={message.from_user.last_name}\n                         content={message.content}\n                         email={message.from_user.email}\n                />\n            )\n        })\n        return displayedMessages\n    }\n\n    return (\n        <>\n            {\n                active ? (\n                    <div className={classes.paper}>\n                        <div className={classes.header}>\n                            <InputLabel className={classes.title}>\n                                {companion.first_name} {companion.last_name}\n                            </InputLabel>\n                        </div>\n                        <div className={classes.messages}>\n                            {displayMessages()}\n                        </div>\n                        <form className={classes.form}>\n                            <TextareaAutosize className={classes.textarea}\n                                              placeholder='type new message...'\n                                              name='content'\n                                              rows={20}\n                                              value={newMessage.content}\n                                              onChange={event => onChange(event)}/>\n                            <div className={classes.buttons}>\n                                <Button color='primary'\n                                        variant='contained'\n                                        className={classes.button}\n                                        type='submit'\n                                        onClick={event => sendNewMessage(event)}>\n                                    Send\n                                </Button>\n                                <Button color='primary'\n                                        variant='contained'\n                                        className={classes.button}\n                                        onClick={event => fetchHistory(event)}>\n                                    History\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n\n\nconst Chat = () => {\n    const classes = useStyles()\n    const [chats, setChats] = useState([])\n    const [active, setActive] = useState(0)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    useEffect(() => {\n        const fetchChats = () => {\n            axios.get('http://localhost:8000/api/chat/', config).then(response => {\n                console.log('Get chats successfully')\n                setChats(response.data.results)\n                console.log(response.data.results)\n                console.log(chats)\n            }).catch(error => {\n                console.log('Fail')\n                console.log(error)\n            })\n        }\n        fetchChats()\n    }, [])\n\n    const displayTabs = () => {\n        let displayedTabs = []\n        chats.map(chat => {\n            const companion = localStorage.getItem('id') === chat.second_member.id ? chat.creator : chat.second_member\n            return displayedTabs.push(\n                <Tab className={classes.tab}\n                     label={`${companion.first_name} ${companion.last_name}`}\n                     onClick={event => setActive(chat.id)}/>\n            )\n        })\n        return displayedTabs\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.tabs}>\n                {displayTabs()}\n            </div>\n            <div className={classes.chatBody}>\n                {\n                    chats.map(chat => {\n                        console.log(active)\n                        console.log(chat.id)\n                        console.log(chat.creator)\n                        return (\n                            <div>\n                                {active === chat.id ? <ChatContent chat={chat} active={true}/> : null}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default Chat\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/UserTasks.js",["213","214"],"import React, {useEffect, useState} from \"react\";\nimport \"./UserTasks.css\"\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport ReviewCreateModal from \"../ReviewCreateModal\";\nimport Pagination from \"../Pagination\";\nimport NotFound from \"../NotFound\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content'\n    }\n}))\n\n\nconst Task = ({ slug, title, deadline, payment, customer, performer, status, id }) => {\n    const classes = useStyles()\n    const [submitType, setSubmitType] = useState('done')\n    const [showReviewCreateModal, setShowReviewCreateModal] = useState(false)\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const onSubmit = event => {\n        event.preventDefault()\n        if (submitType === 'done'){\n            let today = new Date()\n            let dd = String(today.getDate())\n            let mm = String(today.getMonth() + 1)\n            let yyyy = today.getFullYear()\n            today = yyyy + '-' + mm + '-' + dd\n\n            const notificationData = {\n                task: id,\n                from_user: localStorage.getItem('id'),\n                to_user: customer.id === localStorage.getItem('id') ? performer.id : customer.id,\n                send_date: today,\n                content: `${title} was done`,\n                notification_type: 'change_task_status'\n            }\n\n            const body = JSON.stringify(notificationData)\n            axios.post(`http://localhost:8000/api/notifications/create`, body, config).then(response => {\n                console.log('Success')\n                setShowReviewCreateModal(!showReviewCreateModal)\n                }).catch(error => {\n                    console.log('Fail')\n                    console.log(error)\n                })\n        } else {\n            console.log('Start Chat')\n        }\n    }\n\n    return (\n        <div className='user__task'>\n                {\n                    localStorage.getItem('email') === performer.email ? (\n                        <div className='in__process__task__info'>\n                            <label className='title'>{title}</label>\n                            <label className='task__label'>{performer.email}</label>\n                            <div className='user__task__oneline__labels'>\n                                <label className='user__task__payment'>{payment}</label>\n                                <label className='user__task__deadline'>{deadline}</label>\n                            </div>\n                            <form className='send__task__form' onSubmit={event => onSubmit(event)}>\n                                {\n                                    status === 'in_process' ? (\n                                        <button className='send__task__button'\n                                                type='submit'\n                                                onClick={() => setSubmitType('done')}>\n                                            Done\n                                        </button>\n                                    ) : null\n                                }\n                            </form>\n                            <ReviewCreateModal show={showReviewCreateModal}\n                                               setShow={setShowReviewCreateModal}\n                                               customer={customer}\n                                               performer={performer}\n                                               id={id}/>\n                            <label className='user__task__status'>{status}</label>\n                        </div>\n                    ) : (\n                        <div className='user__task__info'>\n                            <label className='title'>{title}</label>\n                            <label className='task__label'>{customer.email}</label>\n                            <label className='user__task__deadline'>{deadline}</label>\n                            <form className='start__chat__form' onSubmit={event => onSubmit(event)}>\n                                <button className='start__chat__button'\n                                        type='submit'\n                                        onClick={() => setSubmitType('chat')}>\n                                    Chat\n                                </button>\n                            </form>\n                            <label className='user__task__status'>{status}</label>\n                        </div>\n                    )\n                }\n        </div>\n    )\n}\n\n\nconst UserTasks = () => {\n    const classes = useStyles()\n    const [userTasks, setUserTasks] = useState([])\n    const [inProcessTasks, setInProcessTasks] = useState([])\n    const [count, setCount] = useState(0)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [nextPage, setNextPage] = useState('')\n    const [previousPage, setPreviousPage] = useState('')\n    const [filterStatus, setFilterStatus] = useState({choice: 'customer__email'})\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    const onChange = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        setFilterStatus({choice: event.target.value})\n    }\n\n    useEffect(() => {\n        const fetchTasks = () => {\n            if (filterStatus.choice === 'performer__email') {\n                axios.get(`http://localhost:8000/api/tasks/?performer__email=${localStorage.getItem('email')}`,\n                config).then(response => {\n                        setInProcessTasks(response.data.results)\n                        setCount(response.data.count)\n                        console.log('Success')\n                        console.log(response.data)\n                     }).catch(error => {\n                        console.log('Fail')\n                        console.log(error)\n                     })\n            } else {\n                console.log(2)\n                axios.get(`http://localhost:8000/api/tasks/?customer__email=${localStorage.getItem('email')}`,\n                config).then(response => {\n                        setUserTasks(response.data.results)\n                        setCount(response.data.count)\n                        console.log('Success')\n                        console.log(userTasks)\n                     }).catch(error => {\n                        console.log('Fail')\n                        console.log(error)\n                     })\n            }\n        }\n        fetchTasks()\n    }, [filterStatus])\n\n    const displayTasks = () => {\n        let tasks = []\n        if (filterStatus.choice === 'performer__email') {\n            tasks = inProcessTasks\n        } else {\n            tasks = userTasks\n        }\n        const displayedTasks = []\n        tasks.map(task => {\n            return displayedTasks.push(\n                <Task customer={task.customer}\n                      title={task.title}\n                      payment={task.payment}\n                      deadline={task.deadline}\n                      slug={task.slug}\n                      performer={task.performer}\n                      status={task.status}\n                      id={task.id}\n                />\n            )\n        })\n        return displayedTasks\n    }\n\n    const showNextPage = () => {\n        axios.get(nextPage).then(response => {\n            filterStatus.choice === 'performer__email' ?\n                setInProcessTasks(response.data.results) : (\n                    setUserTasks(response.data.results)\n                )\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (nextPage) {\n                setCurrentPage(currentPage + 1)\n            }\n            console.log('Success')\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    const showPrevPage = () => {\n        axios.get(previousPage).then(response => {\n            filterStatus.choice === 'performer__email' ?\n                setInProcessTasks(response.data.results) : (\n                    setUserTasks(response.data.results)\n                )\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (previousPage) {\n                setCurrentPage(currentPage - 1)\n            }\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    const changePage = page => {\n        console.log('Change page')\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className='filters'>\n                <select className='user__tasks__filters'\n                        onChange={event => onChange(event)}>\n                    <option className='user__tasks__filter'\n                            name='choice'\n                            value='customer__email'\n                            onChange={event => onChange(event)}>published by me</option>\n                    <option className='user__tasks__filter'\n                            name='choice'\n                            value='performer__email'\n                            onChange={event => onChange(event)}>in process</option>\n                </select>\n            </div>\n            {\n                userTasks.length > 0 || inProcessTasks.length > 0 ? (\n                    <div>\n                        <div className='user__tasks__list'>\n                            {displayTasks()}\n                        </div>\n                        <Pagination itemsPerPage={3}\n                                    count={count}\n                                    currentPage={currentPage}\n                                    changePage={changePage}\n                                    nextPage={showNextPage}\n                                    prevPage={showPrevPage}\n                        />\n                    </div>\n                ) :\n                    <NotFound title='There is no tasks'/>\n            }\n        </div>\n    )\n}\n\nTask.propTypes = {\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    deadline: PropTypes.instanceOf(Date),\n    payment: PropTypes.string.isRequired,\n    customer: PropTypes.object.isRequired,\n    performer: PropTypes.object.isRequired,\n    status: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default UserTasks\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notification.js",["215","216","217","218"],"import React, {useState} from \"react\";\nimport \"./Notification.css\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\";\nimport {Button, InputLabel, makeStyles, TextareaAutosize} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '2%',\n        border: '1px solid'\n    },\n    label: {\n        fontSize: '20px',\n        marginLeft: '30%',\n        margin: '1%'\n    },\n    left: {\n        marginLeft: '2%'\n    },\n    textarea: {\n        marginLeft: '30%',\n        fontWeight: 'bold',\n        fontSize: '20px'\n    },\n    link: {\n        textDecoration: 'none'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: '30%'\n    },\n    button: {\n        margin: '3%'\n    }\n\n}))\n\n\nconst Notification = ({ id, task, from_user, send_date, status, content, notifications, notification_type }) => {\n    const classes = useStyles()\n    const [replyChoiceType, setReplyChoiceType] = useState('')\n    const [solutionChoiceType, setSolutionChoiceType] = useState('')\n    const [frozen, setFrozen] = useState({\n        status: false\n    })\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    const freezeNotifications = task => {\n        const body = JSON.stringify({status: false})\n        notifications.forEach(notification => {\n            if (notification.task.id === task.id) {\n                axios.put(`http://localhost:8000/api/notifications/update/${notification.id}`, body, config)\n                    .then(response => {\n                    console.log('Success')\n                }).catch(error => {\n                    console.log('Error')\n                })\n            }\n        })\n    }\n\n    const deleteNotification = () => {\n        axios.delete(`http://localhost:8000/api/notifications/delete/${id}`, config).then(response => {\n            console.log('Success')\n            console.log(response.data)\n        }).catch(error => {\n            console.log('Error')\n        })\n    }\n\n    const handleReplyChoice = event => {\n        console.log('SUBMIT')\n        event.preventDefault()\n        if (replyChoiceType === 'accept') {\n            const body = JSON.stringify({status: 'in_process', performer: from_user.id, title: task.title})\n            axios.put(`http://localhost:8000/api/tasks/update/${task.slug}`, body, config).then(response => {\n                deleteNotification()\n                console.log(response.data)\n                console.log('Success')\n            }).catch(error => {\n                console.log(error)\n            })\n        } else {\n            deleteNotification()\n        }\n    }\n\n    const handleSolutionChoice = event => {\n        if (solutionChoiceType === 'accept') {\n            const body = JSON.stringify({status: 'done', title: task.title})\n            axios.put(`http://localhost:8000/api/tasks/update/${task.slug}`, body, config).then(response => {\n                console.log('Success')\n            }).catch(error => {\n                console.log('Fail')\n                console.log(error)\n            })\n        } else {\n            axios.delete(`http://localhost:8000/api/notifications/delete/${id}`, config).then(response => {\n                console.log('Success')\n            }).catch(error => {\n                console.log('Error')\n            })\n        }\n    }\n\n    const startChat = () => {\n        const body = JSON.stringify({\n            from_user: from_user.id,\n            to_user: localStorage.getItem('id')\n        })\n        axios.post(`http://localhost:8000/api/chat/create/`, body, config).then(response => {\n            console.log('Success created chat')\n            setReplyChoiceType('accept')\n            //TODO delete other replies and change task status into IN_PROCESS\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            {\n                //TODO if status is CHECKED make it less light\n            }\n            <InputLabel className={`${classes.label} ${classes.left}`}>New</InputLabel>\n            <InputLabel className={classes.label}>Date: {send_date}</InputLabel>\n            <Link className={classes.link} to={`tasks/${task.slug}`}>\n                <InputLabel className={classes.label}>{task.title}</InputLabel>\n            </Link>\n            <InputLabel className={classes.label}>\n                From: {from_user.email} {from_user.first_name} {from_user.last_name}\n            </InputLabel>\n            <InputLabel className={classes.label}>Status: {task.status}</InputLabel>\n            <Box className={classes.textarea}>{content}</Box>\n            {\n                notification_type === 'reply' ? (\n                    <form className={classes.form} onSubmit={event => handleReplyChoice(event)}>\n                        <Button className={classes.button}\n                                variant='contained'\n                                color='primary'\n                                type='submit'\n                                onClick={() => setReplyChoiceType('accept')}>\n                            Accept\n                        </Button>\n                        <Button className={classes.button}\n                                variant='contained'\n                                color='secondary'\n                                type='submit'\n                                onClick={() => setReplyChoiceType('cancel')}>\n                            Cancel\n                        </Button>\n                    </form>\n                ) : (\n                    <form className='accept__task__solution__form' onSubmit={event => handleSolutionChoice(event)}>\n                        <button type='submit' className='solution__accept' onClick={() => startChat()}>\n                            Accept\n                        </button>\n                        <button type='submit' className='solution__cancel' onClick={() => setSolutionChoiceType('cancel')}>\n                            Cancel\n                        </button>\n                    </form>\n                )\n            }\n        </div>\n    )\n}\n\nNotification.propTypes = {\n    id: PropTypes.number.isRequired,\n    task: PropTypes.object.isRequired,\n    from_user: PropTypes.object.isRequired,\n    send_date: PropTypes.instanceOf(Date).isRequired,\n    status: PropTypes.bool.isRequired,\n    content: PropTypes.string.isRequired,\n    notifications: PropTypes.array.isRequired,\n    notification_type: PropTypes.string.isRequired\n}\n\nexport default Notification\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileEditTab.js",["219"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./ProfileTabs.css\"\nimport \"./ProfileEditTab.css\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '10%',\n        marginLeft: '5%',\n        width: '70%'\n    },\n    editName: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    nameInput: {\n        margin: '2% 0 2%',\n        width: '100%'\n    },\n    input: {\n        margin: '2% 0 2%'\n    },\n    button: {\n        width: '30%',\n        marginLeft: '35%'\n    }\n}))\n\n\nconst ProfileEditTab = () => {\n    const classes = useStyles()\n    const [profile, setProfile] = useState({\n        email: '',\n        phone: '',\n        first_name: '',\n        last_name: '',\n        password: ''\n    })\n\n    useEffect(() => {\n        const fetchProfileDetail = () => {\n            axios.get(`http://localhost:8000/api/accounts/${userEmail}`, config).then(response => {\n                setProfile(response.data)\n                console.log(response.data)\n                console.log('Profile received successfully')\n            }).catch(error => {\n                console.log('Profile received fail')\n            })\n        }\n        fetchProfileDetail()\n    }, [])\n     const { email, phone, first_name, last_name, password } = profile\n     const config = {\n         headers: {\n             'Content-Type': 'application/json',\n             'Authorization': `Bearer ${localStorage.getItem('token')}`\n         }\n     }\n     const userEmail = localStorage.getItem('email')\n\n     const onChange = event => setProfile({...profile, [event.target.name]: event.target.value})\n\n     const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n            if (key === 'phone' && value.substr(0, 0) === '8') {\n                obj.phone = '+7' + value.substr(2)\n            }\n        })\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        clear(profile)\n        const body = JSON.stringify(profile)\n        axios.put(`http://localhost:8000/api/accounts/update/${userEmail}`, body, config).then(response => {\n            console.log('Profile updated successfully')\n            setProfile(response.data)\n        }).catch(error => {\n            console.log('Profile updated fail')\n        })\n    }\n\n    return (\n        <div>\n            <form className={classes.root} onSubmit={event => onSubmit(event)}>\n                {/*<div className=\"avatar\">*/}\n                {/*    <img src=\"\"/>*/}\n                {/*</div>*/}\n                <div className={classes.editName}>\n                    <TextField className={classes.nameInput}\n                               variant='outlined'\n                               label=\"First Name\"\n                               name='first_name'\n                               placeholder={first_name}\n                               value={first_name}\n                               onChange={event => onChange(event)}/>\n                    <TextField className={classes.nameInput}\n                               name='last_name'\n                               value={last_name}\n                               placeholder={last_name}\n                               variant='outlined'\n                               label='Last Name'\n                               onChange={event => onChange(event)}/>\n                </div>\n                <TextField className={classes.input}\n                           name='email'\n                           variant='outlined'\n                           label='Email'\n                           placeholder={email}\n                           value={email}\n                           onChange={event => onChange(event)}/>\n                <TextField className={classes.input}\n                           variant='outlined'\n                           label='Phone'\n                           placeholder={phone}\n                           name='phone'\n                           value={phone}\n                           onChange={event => onChange(event)}/>\n                <TextField className={classes.input}\n                           variant='outlined'\n                           label='Password'\n                           type=\"password\"\n                           name='password'\n                           value={password}\n                           onChange={event => onChange(event)}/>\n                <Button className={classes.button} variant='contained' color='primary' type='submit'>Save</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default ProfileEditTab\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NavBar.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ReviewCreateModal.js",["220","221","222"],"import React, {useState} from \"react\";\nimport \"./ReviewCreateModal.css\"\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\"\n\n\nconst ReviewCreateModal = ({ show, setShow, performer, customer, id }) => {\n    const [modalData, setModalData] = useState({\n        from_user: localStorage.getItem('id'),\n        to_user: customer.id === localStorage.getItem('id') ? performer.id : customer.id,\n        task: id,\n        content: '',\n        mark: ''\n    })\n    const { from_user, to_user, task, content, mark } = modalData\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const onChange = event => setModalData({...modalData, [event.target.name]: event.target.value})\n    const onSubmit = event => {\n        event.preventDefault()\n        console.log(modalData)\n        const body = JSON.stringify(modalData)\n        axios.post('http://localhost:8000/api/reviews/create', body, config).then(response => {\n            console.log('Success')\n            setShow(!show)\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    if (!show) {\n        return null\n    }\n\n    return (\n        <div className='review__modal'>\n            <label className='modal__title'>Create review</label>\n            <form className='modal__form' onSubmit={event => onSubmit(event)}>\n                <div className='modal__form__inputs'>\n                    <select className='modal__mark__select'\n                            name='mark'\n                            value={mark}\n                            onChange={event => onChange(event)}>\n                        <option className='modal__mark__option'>0</option>\n                        <option className='modal__mark__option'>1</option>\n                        <option className='modal__mark__option'>2</option>\n                        <option className='modal__mark__option'>3</option>\n                        <option className='modal__mark__option'>4</option>\n                        <option className='modal__mark__option'>5</option>\n                        <option className='modal__mark__option'>6</option>\n                        <option className='modal__mark__option'>7</option>\n                        <option className='modal__mark__option'>8</option>\n                        <option className='modal__mark__option'>9</option>\n                        <option className='modal__mark__option'>10</option>\n                    </select>\n                    <textarea className='modal__content__textarea'\n                              placeholder='Type review...'\n                              name='content'\n                              value={content}\n                              onChange={event => onChange(event)}\n                    />\n                </div>\n                <button className='modal__form__button' type='submit' name='content' value={content}>Send</button>\n            </form>\n        </div>\n    )\n}\n\nReviewCreateModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    performer: PropTypes.object.isRequired,\n    customer: PropTypes.object.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default ReviewCreateModal\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/Stats.js",["223"],"import React, {useEffect, useState} from \"react\";\nimport \"./Stats.css\"\nimport PieChart from \"./PieChart\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '10%',\n        marginLeft: '5%',\n        width: '70%',\n    },\n\n}))\n\n\nconst Stats = () => {\n    const classes = useStyles()\n    const [barChartData, setBarChartData] = useState({\n        solved_tasks_num: 0,\n        failed_tasks_num: 0,\n        created_tasks_num: 0,\n        total_tasks_num: 0\n    })\n    const { solved_tasks_num, failed_tasks_num, created_tasks_num, total_tasks_num } = barChartData\n\n    const [lineChartData, setLineChartData] = useState({\n        average_mark: 0,\n        reviews_num: 0\n    })\n    const { average_tasks_num, reviews_num } = lineChartData\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    useEffect(() => {\n        const fetchStats = () => {\n            axios.get(`http://localhost:8000/api/stats/detail`, config).then(response => {\n                const data = response.data\n                setBarChartData({\n                    solved_tasks_num: data.solved_tasks_num,\n                    failed_tasks_num: data.failed_tasks_num,\n                    created_tasks_num: data.created_tasks_num,\n                    total_tasks_num: data.total_tasks_num\n                })\n                setLineChartData({\n                    average_mark: data.average_mark,\n                    reviews_num: data.reviews_num\n                })\n                console.log('Success')\n            }).catch(error => {\n                console.log('Fail')\n            })\n\n        }\n        fetchStats()\n    }, [])\n\n\n    return (\n        <div className={classes.root}>\n                <PieChart solved_tasks_num={solved_tasks_num}\n                          failed_tasks_num={failed_tasks_num}\n                          created_tasks_num={created_tasks_num}\n                          total_tasks_num={total_tasks_num}\n                />\n                <BarChart average_mark={average_tasks_num}\n                          reviews_num={reviews_num}\n                />\n        </div>\n    )\n}\n\n\nexport default Stats\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/BarChart.js",["224"],"import React from \"react\";\nimport \"./LineChart.css\"\nimport PropTypes from \"prop-types\"\nimport { Line, Bar } from \"react-chartjs-2\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        marginBottom: '3%'\n    }\n}))\n\n\nconst BarChart = ({ average_mark, reviews_num }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Bar type='line' height={400} width={300} data={{\n                labels: ['average_mark', 'reviews'],\n                datasets: [{\n                    label: 'rate stats',\n                    backgroundColor: ['red', 'blue'],\n                    data: [7.5, 12]\n                }]\n            }} options={{\n                     maintainAspectRatio: false\n                 }}\n            />\n        </div>\n    )\n}\n\nBarChart.propTypes = {\n    average_mark: PropTypes.number.isRequired,\n    reviews_num: PropTypes.number.isRequired\n}\n\n\nexport default BarChart\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/LineChart.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/PieChart.js",["225"],"import React from \"react\";\nimport \"./BarChart.css\"\nimport {Bar, Pie} from \"react-chartjs-2\"\nimport PropTypes from \"prop-types\"\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    }\n}))\n\n\nconst PieChart = ({ solved_tasks_num, failed_tasks_num, created_tasks_num, total_tasks_num }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Pie height={400}\n                 width={300}\n                 data={{\n                     labels: ['solved', 'failed', 'created', 'total'],\n                     datasets: [{\n                         label: 'tasks stat',\n                         backgroundColor: ['green', 'red', 'blue', 'grey'],\n                         data: [4, 2, created_tasks_num, total_tasks_num]\n                     }]\n                 }}\n                 options={{\n                     maintainAspectRatio: false\n                 }}\n                 type='bar'\n            />\n        </div>\n    )\n}\n\n\nPieChart.propTypes = {\n    solved_tasks_num: PropTypes.number.isRequired,\n    failed_tasks_num: PropTypes.number.isRequired,\n    created_tasks_num: PropTypes.number.isRequired,\n    total_tasks_num: PropTypes.number.isRequired\n}\n\n\nexport default PieChart\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":34,"column":8,"nodeType":"232","endLine":34,"endColumn":10,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":84,"column":21,"nodeType":"236","endLine":84,"endColumn":34},{"ruleId":"226","replacedBy":"237"},{"ruleId":"228","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":58,"column":52,"nodeType":"241","messageId":"242","endLine":58,"endColumn":60},{"ruleId":"230","severity":1,"message":"243","line":193,"column":8,"nodeType":"232","endLine":193,"endColumn":10,"suggestions":"244"},{"ruleId":"230","severity":1,"message":"245","line":113,"column":8,"nodeType":"232","endLine":113,"endColumn":17,"suggestions":"246"},{"ruleId":"239","severity":1,"message":"247","line":115,"column":11,"nodeType":"241","messageId":"242","endLine":115,"endColumn":19},{"ruleId":"239","severity":1,"message":"248","line":121,"column":11,"nodeType":"241","messageId":"242","endLine":121,"endColumn":25},{"ruleId":"239","severity":1,"message":"249","line":1,"column":16,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"250","line":3,"column":99,"nodeType":"241","messageId":"242","endLine":3,"endColumn":105},{"ruleId":"239","severity":1,"message":"251","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":13},{"ruleId":"239","severity":1,"message":"252","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":25},{"ruleId":"239","severity":1,"message":"253","line":134,"column":7,"nodeType":"241","messageId":"242","endLine":134,"endColumn":12},{"ruleId":"239","severity":1,"message":"254","line":146,"column":7,"nodeType":"241","messageId":"242","endLine":146,"endColumn":12},{"ruleId":"239","severity":1,"message":"255","line":147,"column":21,"nodeType":"241","messageId":"242","endLine":147,"endColumn":31},{"ruleId":"230","severity":1,"message":"256","line":153,"column":8,"nodeType":"232","endLine":153,"endColumn":12,"suggestions":"257"},{"ruleId":"239","severity":1,"message":"258","line":155,"column":11,"nodeType":"241","messageId":"242","endLine":155,"endColumn":25},{"ruleId":"239","severity":1,"message":"259","line":171,"column":11,"nodeType":"241","messageId":"242","endLine":171,"endColumn":29},{"ruleId":"239","severity":1,"message":"260","line":173,"column":15,"nodeType":"241","messageId":"242","endLine":173,"endColumn":25},{"ruleId":"239","severity":1,"message":"261","line":68,"column":11,"nodeType":"241","messageId":"242","endLine":68,"endColumn":27},{"ruleId":"262","severity":1,"message":"263","line":16,"column":1,"nodeType":"264","endLine":51,"endColumn":2},{"ruleId":"239","severity":1,"message":"265","line":3,"column":5,"nodeType":"241","messageId":"242","endLine":3,"endColumn":19},{"ruleId":"262","severity":1,"message":"263","line":15,"column":1,"nodeType":"264","endLine":38,"endColumn":2},{"ruleId":"226","replacedBy":"266"},{"ruleId":"228","replacedBy":"267"},{"ruleId":"230","severity":1,"message":"268","line":37,"column":8,"nodeType":"232","endLine":37,"endColumn":10,"suggestions":"269"},{"ruleId":"239","severity":1,"message":"270","line":1,"column":16,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"271","line":65,"column":48,"nodeType":"241","messageId":"242","endLine":65,"endColumn":53},{"ruleId":"239","severity":1,"message":"272","line":4,"column":64,"nodeType":"241","messageId":"242","endLine":4,"endColumn":73},{"ruleId":"230","severity":1,"message":"273","line":177,"column":8,"nodeType":"232","endLine":177,"endColumn":10,"suggestions":"274"},{"ruleId":"230","severity":1,"message":"275","line":288,"column":8,"nodeType":"232","endLine":288,"endColumn":10,"suggestions":"276"},{"ruleId":"239","severity":1,"message":"277","line":21,"column":11,"nodeType":"241","messageId":"242","endLine":21,"endColumn":18},{"ruleId":"230","severity":1,"message":"278","line":163,"column":8,"nodeType":"232","endLine":163,"endColumn":22,"suggestions":"279"},{"ruleId":"239","severity":1,"message":"280","line":5,"column":41,"nodeType":"241","messageId":"242","endLine":5,"endColumn":57},{"ruleId":"239","severity":1,"message":"281","line":49,"column":12,"nodeType":"241","messageId":"242","endLine":49,"endColumn":18},{"ruleId":"239","severity":1,"message":"282","line":49,"column":20,"nodeType":"241","messageId":"242","endLine":49,"endColumn":29},{"ruleId":"239","severity":1,"message":"283","line":59,"column":11,"nodeType":"241","messageId":"242","endLine":59,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":56,"column":8,"nodeType":"232","endLine":56,"endColumn":10,"suggestions":"284"},{"ruleId":"239","severity":1,"message":"285","line":15,"column":13,"nodeType":"241","messageId":"242","endLine":15,"endColumn":22},{"ruleId":"239","severity":1,"message":"286","line":15,"column":24,"nodeType":"241","messageId":"242","endLine":15,"endColumn":31},{"ruleId":"239","severity":1,"message":"287","line":15,"column":33,"nodeType":"241","messageId":"242","endLine":15,"endColumn":37},{"ruleId":"230","severity":1,"message":"288","line":64,"column":8,"nodeType":"232","endLine":64,"endColumn":10,"suggestions":"289"},{"ruleId":"239","severity":1,"message":"290","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":14},{"ruleId":"239","severity":1,"message":"291","line":3,"column":9,"nodeType":"241","messageId":"242","endLine":3,"endColumn":12},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'userEmail'. Either include them or remove the dependency array.","ArrayExpression",["294"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["292"],["293"],"no-unused-vars","'customer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'customer', 'props.match', and 'props.slug'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'deadline', 'email', 'payment', 'publication_date', 'status', and 'title'. Either include them or remove the dependency array.",["296"],"'onSubmit' is assigned a value but never used.","'handleCheckbox' is assigned a value but never used.","'Component' is defined but never used.","'MDBBtn' is defined but never used.","'axios' is defined but never used.","'WebSocketInstance' is defined but never used.","'Chat3' is defined but never used.","'Chat2' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email', 'setChats', and 'token'. Either include them or remove the dependency array. If 'setChats' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["297"],"'renderMessages' is assigned a value but never used.","'sendMessageHandler' is assigned a value but never used.","'messageObj' is assigned a value but never used.","'showDropdownMenu' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'GET_CHATS_FAIL' is defined but never used.",["292"],["293"],"React Hook useEffect has missing dependencies: 'config' and 'notifications'. Either include them or remove the dependency array.",["298"],"'useEffect' is defined but never used.","'other' is assigned a value but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.name', 'client', and 'history'. Either include them or remove the dependency array. You can also do a functional update 'setHistory(h => ...)' if you only need 'history' in the 'setHistory' call.",["299"],"React Hook useEffect has missing dependencies: 'chats' and 'config'. Either include them or remove the dependency array.",["300"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config' and 'userTasks'. Either include them or remove the dependency array.",["301"],"'TextareaAutosize' is defined but never used.","'frozen' is assigned a value but never used.","'setFrozen' is assigned a value but never used.","'freezeNotifications' is assigned a value but never used.",["302"],"'from_user' is assigned a value but never used.","'to_user' is assigned a value but never used.","'task' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["303"],"'Line' is defined but never used.","'Bar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"304","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [config, userEmail]",{"range":"323","text":"324"},"Update the dependencies array to be: [customer, props.match, props.slug]",{"range":"325","text":"326"},"Update the dependencies array to be: [deadline, email, filters, payment, publication_date, status, title]",{"range":"327","text":"328"},"Update the dependencies array to be: [email, id, setChats, token]",{"range":"329","text":"330"},"Update the dependencies array to be: [config, notifications]",{"range":"331","text":"332"},"Update the dependencies array to be: [chat.name, client, history]",{"range":"333","text":"334"},"Update the dependencies array to be: [chats, config]",{"range":"335","text":"336"},"Update the dependencies array to be: [config, filterStatus, userTasks]",{"range":"337","text":"338"},{"range":"339","text":"324"},"Update the dependencies array to be: [config]",{"range":"340","text":"341"},[1008,1010],"[config, userEmail]",[5407,5409],"[customer, props.match, props.slug]",[2815,2824],"[deadline, email, filters, payment, publication_date, status, title]",[3568,3572],"[email, id, setChats, token]",[1007,1009],"[config, notifications]",[5041,5043],"[chat.name, client, history]",[9170,9172],"[chats, config]",[6817,6831],"[config, filterStatus, userTasks]",[1382,1384],[1908,1910],"[config]"]