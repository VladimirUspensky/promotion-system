[{"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js":"1","/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js":"2","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js":"3","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js":"4","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js":"5","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js":"6","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js":"7","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js":"8","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js":"9","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js":"10","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js":"11","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js":"12","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js":"13","/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js":"14","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js":"15","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js":"16","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notifications.js":"17","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileTabs.js":"18","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Chat.js":"19","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/UserTasks.js":"20","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notification.js":"21","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileEditTab.js":"22","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NavBar.js":"23","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ReviewCreateModal.js":"24","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/Stats.js":"25","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/BarChart.js":"26","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/LineChart.js":"27","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/PieChart.js":"28","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/auth/SignUp.js":"29","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/auth/SignIn.js":"30","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Layout.js":"31"},{"size":478,"mtime":1621195356786,"results":"32","hashOfConfig":"33"},{"size":1945,"mtime":1623616146021,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610468760874,"results":"35","hashOfConfig":"33"},{"size":120,"mtime":1619353835055,"results":"36","hashOfConfig":"33"},{"size":3749,"mtime":1623604890967,"results":"37","hashOfConfig":"33"},{"size":10943,"mtime":1623604890923,"results":"38","hashOfConfig":"33"},{"size":8838,"mtime":1623604890903,"results":"39","hashOfConfig":"33"},{"size":1500,"mtime":1623604890891,"results":"40","hashOfConfig":"33"},{"size":3479,"mtime":1623615509986,"results":"41","hashOfConfig":"33"},{"size":2548,"mtime":1623604890911,"results":"42","hashOfConfig":"33"},{"size":2371,"mtime":1623615143466,"results":"43","hashOfConfig":"33"},{"size":1572,"mtime":1623616146037,"results":"44","hashOfConfig":"33"},{"size":483,"mtime":1620159804838,"results":"45","hashOfConfig":"33"},{"size":385,"mtime":1621198652938,"results":"46","hashOfConfig":"33"},{"size":116,"mtime":1623606313002,"results":"47","hashOfConfig":"33"},{"size":1302,"mtime":1623615510014,"results":"48","hashOfConfig":"33"},{"size":1949,"mtime":1623615143382,"results":"49","hashOfConfig":"33"},{"size":3447,"mtime":1623604890871,"results":"50","hashOfConfig":"33"},{"size":9953,"mtime":1623615143454,"results":"51","hashOfConfig":"33"},{"size":10692,"mtime":1623604890983,"results":"52","hashOfConfig":"33"},{"size":6661,"mtime":1623615143398,"results":"53","hashOfConfig":"33"},{"size":4784,"mtime":1623615510002,"results":"54","hashOfConfig":"33"},{"size":2378,"mtime":1623604890943,"results":"55","hashOfConfig":"33"},{"size":3324,"mtime":1621366756797,"results":"56","hashOfConfig":"33"},{"size":2409,"mtime":1623605557379,"results":"57","hashOfConfig":"33"},{"size":1013,"mtime":1623605610974,"results":"58","hashOfConfig":"33"},{"size":748,"mtime":1621367799848,"results":"59","hashOfConfig":"33"},{"size":1303,"mtime":1623605610958,"results":"60","hashOfConfig":"33"},{"size":3814,"mtime":1623606192365,"results":"61","hashOfConfig":"33"},{"size":2578,"mtime":1623606192357,"results":"62","hashOfConfig":"33"},{"size":416,"mtime":1623616150733,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"mnbbjl",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js",[],["141","142"],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js",["143"],"import React, {useState} from \"react\";\nimport \"./TaskCreate.css\"\nimport axios from \"axios\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, TextareaAutosize, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        gridArea: 'content',\n        width: '100%',\n        marginTop: '2%',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90%',\n        marginLeft: '2%'\n    },\n    inputs: {\n        display: 'flex',\n        marginTop: '2%',\n        marginBottom: '2%'\n    },\n    input: {\n        width: '100%',\n        marginBottom: '2%'\n    },\n    left: {\n\n    },\n    right: {\n\n    },\n    button: {\n        width: '20%',\n        marginLeft: '40%'\n    },\n    textarea: {\n        borderRadius: '5px',\n        outline: 'none'\n    }\n\n}))\n\n\nconst TaskCreate = () => {\n    const classes = useStyles()\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: '',\n        customer: localStorage.getItem('id')\n    })\n\n    const { title, description, deadline, payment, customer } = formData\n\n    const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n    const onSubmit = event => {\n        event.preventDefault()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n        const body = JSON.stringify(formData)\n        axios.post('http://localhost:8000/api/tasks/create', body, config).then(response => {\n            console.log('success')\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            {/*<div className=\"task__create__header\">*/}\n            {/*    <div className=\"task__create__header__title\">*/}\n            {/*        Create New Task*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n\n            <form className={classes.form} onSubmit={event => onSubmit(event)}>\n                <TextField className={classes.input}\n                           label=\"title\"\n                           name='title'\n                           value={title}\n                           onChange={event => onChange(event)}/>\n                <TextareaAutosize className={classes.textarea}\n                                  rows={20}\n                                  placeholder=\"description\"\n                                  name='description'\n                                  value={description}\n                                  onChange={event => onChange(event)}/>\n                <div className={classes.inputs}>\n                    <TextField className={classes.input}\n                               variant='outlined'\n                               label=\"deadline\"\n                               name='deadline'\n                               value={deadline}\n                               onChange={event => onChange(event)}/>\n                    <TextField className={classes.input}\n                               variant='outlined'\n                               label=\"payment\"\n                               name='payment'\n                               value={payment}\n                               onChange={event => onChange(event)}/>\n                </div>\n                <Button variant='contained'\n                        color='primary'\n                        type=\"submit\"\n                        className={classes.button}>\n                    Create New Task\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default TaskCreate\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js",["144"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./TaskDetail.css\"\nimport Reply from \"./Reply\";\nimport {Button, InputLabel, makeStyles, TextareaAutosize, TextField} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        marginLeft: '30%',\n        width: '60%',\n        marginBottom: '2%'\n    },\n    customer: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    customerLabel: {\n        fontWeight: 'bold',\n        margin: '5px'\n    },\n    labels: {\n        display: 'inline-flex',\n    },\n    label: {\n        margin: '2%'\n    },\n    description: {\n        width: '50%'\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'flex-start'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        width: '50%'\n    },\n    textarea: {\n        outline: 'none',\n        marginBottom: '4%',\n        borderRadius: '5px'\n    },\n    replies: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    relyButton: {\n        display: 'flex',\n        width: '50%',\n        marginLeft: '25%'\n    },\n    editForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '50%'\n    },\n    editButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center'\n    },\n    editButton: {\n        width: '50%',\n        marginBottom: '2%',\n        marginTop: '2%'\n    },\n    field: {\n        display: 'flex',\n        margin: '3% 0 3%'\n    }\n}))\n\n\nconst TaskDetail = (props) => {\n    const classes = useStyles()\n    const [replies, setReplies] = useState([])\n    const [taskDetail, setTaskDetail] = useState({})\n    const [customer, setCustomer] = useState({})\n    const [isEditable, setIsEditable] = useState(false)\n    const [submitType, setSubmitType] = useState('')\n    const [formData, setFormData] = useState({\n        content: '',\n        send_date: '',\n        from_user: 0,\n        task: 0\n    })\n    const [editFormData, setEditFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: '',\n        performer: taskDetail.performer,\n        customer: taskDetail.customer\n    })\n\n    const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n    const { title, description, deadline, payment } = editFormData\n\n    const { content } = formData\n\n    const onChange = event => {\n        setFormData({...formData, [event.target.name]: event.target.value})\n    }\n\n    const onEditFormChange = event => {\n        setEditFormData({...editFormData, [event.target.name]: event.target.value})\n    }\n\n    const onSubmit = event => {\n        const send_date = new Date().getUTCDate()\n        const task = taskDetail.id\n        const from_user = localStorage.getItem('id')\n        const body = JSON.stringify({ content, send_date, from_user, task })\n\n        axios.post('http://localhost:8000/api/tasks/reply/create', body, config).then(response => {\n            console.log('Success reply post')\n            console.log(response)\n        }).catch(error => {\n            console.log('Error reply post')\n        })\n    }\n\n    const handleEditButton = event => setIsEditable(!isEditable)\n\n    const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n        })\n    }\n\n    const handleEditDeleteTask = event => {\n        event.preventDefault()\n        clear(editFormData)\n        const body = JSON.stringify(editFormData)\n        const slug = window.location.pathname.split('/').pop()\n\n        if (submitType === 'delete') {\n            axios.delete(`http://localhost:8000/api/tasks/delete/${slug}`, config).then(response => {\n                console.log('Deleted task successfully')\n            }).catch(error => {\n                console.log('Deleted task failed')\n            })\n        } else {\n            axios.put(`http://localhost:8000/api/tasks/update/${slug}`, body, config).then(response => {\n                setTaskDetail(response.data)\n                console.log('Updated task successfully')\n            }).catch(error => {\n                console.log('Updated task failed')\n            })\n        }\n    }\n\n    useEffect(() => {\n        const fetchTaskDetail = () => {\n            const slug = props.match ? props.match.params.slug : props.slug\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            }\n            axios.get(`http://localhost:8000/api/tasks/${slug}`, config).then(response => {\n                setTaskDetail(response.data)\n                setCustomer(response.data.customer)\n                setReplies(response.data.replies)\n                console.log(customer)\n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        fetchTaskDetail()\n    }, [])\n\n    const displayReplies = () => {\n        let displayedReplies = []\n        console.log(replies)\n        replies.map(reply => {\n            return displayedReplies.push(\n                <Reply send_date={reply.send_date}\n                       content={reply.content}\n                       last_name={reply.from_user.last_name}\n                       first_name={reply.from_user.first_name}/>\n            )\n        })\n        return displayedReplies\n    }\n    console.log(taskDetail.description)\n    return (\n        <div className={classes.root}>\n            <div className={classes.customer}>\n                <InputLabel className={classes.customerLabel}>{customer.email}</InputLabel>\n                <InputLabel className={classes.customerLabel}>{customer.first_name} {customer.last_name}</InputLabel>\n            </div>\n            <div className={classes.labels}>\n                <InputLabel className={`${classes.label} ${classes.left}`}>\n                    Published: {taskDetail.published_date}\n                </InputLabel>\n                <InputLabel className={`${classes.label} ${classes.right}`}>Deadline: {taskDetail.deadline}</InputLabel>\n            </div>\n            <Box textAlign='justify'\n                 fontWeight='bold'\n                 fontSize={18}\n                 className={classes.description}>\n                {taskDetail.description}\n            </Box>\n            <div className={classes.labels}>\n                <InputLabel className={classes.label}>Status: {taskDetail.status}</InputLabel>\n                <InputLabel className={classes.label}>Payment: {taskDetail.payment}</InputLabel>\n            </div>\n            {\n                customer.email === localStorage.getItem('email') ? (\n                    <Button className={classes.editButton}\n                            variant='contained'\n                            color='primary'\n                            onClick={event => handleEditButton(event)}>Edit</Button>\n                ) : null\n            }\n            {\n                isEditable ? (\n                    <form className={classes.editForm} onSubmit={event => handleEditDeleteTask(event)}>\n                        <TextField className={classes.field}\n                                   placeholder='title'\n                                   name='title'\n                                   value={title}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <TextareaAutosize className={classes.textarea}\n                                          rows={10}\n                                          placeholder='description'\n                                          name='description'\n                                          value={description}\n                                          onChange={event => onEditFormChange(event)}/>\n                        <TextField className={classes.field}\n                                   placeholder='payment'\n                                   name='payment'\n                                   value={payment}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <TextField className={classes.field}\n                                   placeholder='deadline'\n                                   name='deadline'\n                                   value={deadline}\n                                   onChange={event => onEditFormChange(event)}/>\n                        <div className={classes.editButtons}>\n                            <Button variant='contained'\n                                    color='primary'\n                                    className={classes.editButton}\n                                    type='submit'\n                                    onClick={event => setSubmitType('update')}>\n                            Update\n                            </Button>\n                            <Button variant='contained'\n                                    color='secondary'\n                                    className={classes.editButton}\n                                    type='submit'\n                                    onClick={event => setSubmitType('delete')}>\n                            Delete\n                            </Button>\n                        </div>\n                    </form>\n                ) : null\n            }\n            {\n                localStorage.getItem('email') === customer.email ||\n                (taskDetail.performer && taskDetail.performer.email === localStorage.getItem('email')) ? null : (\n                    <form className={classes.form} onSubmit={event => onSubmit(event)}>\n                        <TextareaAutosize rows={10}\n                                          className={classes.textarea}\n                                          placeholder='type your reply'\n                                          name='content'\n                                          value={content}\n                                          onChange={event => onChange(event)}/>\n                        <Button variant='contained'\n                                color='primary'\n                                type='submit'\n                                className={classes.relyButton}>\n                            Send\n                        </Button>\n                    </form>\n                )\n            }\n            <div className={classes.replies}>\n                {displayReplies()}\n            </div>\n        </div>\n\n    )\n}\n\nexport default TaskDetail\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js",["145","146","147"],"import React, {useEffect, useState} from \"react\";\nimport \"./TasksList.css\"\nimport axios from \"axios\";\nimport Task from \"./Task\";\nimport Pagination from \"../Pagination\";\nimport {Checkbox, InputLabel, makeStyles, MenuItem, Select, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '50%',\n        height: '100%',\n        justifyContent: 'center',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 2px 4px -2px blue',\n        marginLeft: '25%',\n        borderTop: 'none',\n    },\n    form: {\n        width: '50%',\n        height: '30%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '25%',\n        marginTop: '3%',\n        border: '1px solid blue',\n        boxShadow: '0 0 10px'\n\n    },\n\n    filters: {\n        padding: '30px',\n\n    },\n    filterLabel: {\n\n    },\n    selects: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'center',\n    },\n    select: {\n        margin: '10px',\n        width: '50%'\n    },\n    option: {\n\n\n    },\n    inputs: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '10px',\n\n    },\n    input: {\n        marginLeft: '15px',\n        marginRight: '15px'\n    },\n    label: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    checkbox_block: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    search: {\n        display: 'flex',\n\n    },\n    search_line: {\n        display: 'flex',\n        width: '100%'\n    }\n}))\n\n\nconst TasksList = () => {\n    const [tasks, setTasks] = useState([])\n    const [count, setCount] = useState(0)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [nextPage, setNextPage] = useState('')\n    const [previousPage, setPreviousPage] = useState('')\n    const [filters, setFilters] = useState({\n        title: '',\n        status: '',\n        payment: '',\n        deadline: '',\n        publication_date: '',\n        email: ''\n    })\n    const classes = useStyles()\n    const {title, status, payment, deadline, publication_date, email} = filters\n\n    useEffect(() => {\n        const fetchTasks = () => {\n            axios.get(\n                    `http://localhost:8000/api/tasks/?status=${status}&title=${title}&payment=${payment}&deadline=${deadline}&publication_date=${publication_date}&customer__email=${email}`\n            ).then(response => {\n                setTasks(response.data.results)\n                setCount(response.data.count)\n                setNextPage(response.data.next)\n                console.log(filters)\n                setPreviousPage(response.data.previous)\n            }).catch(error => {\n                console.log('Fetch tasks error')\n            })\n        }\n        fetchTasks()\n    }, [filters])\n\n    const onSubmit = event => {\n        event.preventDefault()\n    }\n\n    const onChange = event => setFilters({...filters, [event.target.name]: event.target.value})\n\n    const handleCheckbox = event => {\n        if (filters.email) {\n            setFilters({...filters, email: ''})\n        } else {\n            setFilters({...filters, email: localStorage.getItem('email')})\n        }\n    }\n\n    const displayTasks = () => {\n        let displayedTasks = []\n        tasks.map(task => {\n            return displayedTasks.push(\n                <Task\n                    slug={task.slug}\n                    title={task.title}\n                    payment={task.payment}\n                    description={task.description}\n                    published_date={task.published_date}\n                    deadline={task.deadline}\n                    status={task.status}\n                />\n            )\n        })\n        return displayedTasks\n    }\n\n    const showNextPage = () => {\n        axios.get(nextPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (nextPage) {\n                setCurrentPage(currentPage + 1)\n            }\n            console.log(response.data)\n        }).catch(error => {\n            console.log('ShowNextPage error')\n        })\n    }\n\n    const showPrevPage = () => {\n        axios.get(previousPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (previousPage) {\n                setCurrentPage(currentPage - 1)\n            }\n        }).catch(error => {\n            console.log('ShowPreviousPage error')\n        })\n    }\n\n    const changePage = page => {\n        axios.get(`http://localhost:8000/api/tasks/?page=${page}`).then(response => {\n            setTasks(response.data.results)\n            setCount(response.data.count)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            setCurrentPage(page)\n        }).catch(error => {\n            console.log('ChangePage error')\n        })\n    }\n\n\n    return (\n        <div className=\"tasks__list\">\n            <div className=\"tasks__list__header\">\n                <div className=\"tasks__list__header__title\">\n                    Tasks List\n                </div>\n            </div>\n\n            <form className={classes.root}>\n                <div className={classes.filters}>\n                    <div className={classes.selects}>\n                        <InputLabel id='status-label' className={classes.label}>Status</InputLabel>\n                        <Select labelId='status-label'\n                                className={classes.select}\n                                name='status'\n                                value={status}\n                                onChange={event => onChange(event)}>\n                            <MenuItem className={classes.option} value='open'>open</MenuItem>\n                            <MenuItem className={classes.option} value='done'>done</MenuItem>\n                            <MenuItem className={classes.option} value='in_process'>in_process</MenuItem>\n                        </Select>\n\n                        <InputLabel className={classes.label}>Payment</InputLabel>\n                        <Select className={classes.select}\n                                name='payment'\n                                value={payment}\n                                onChange={event => onChange(event)}>\n                            <MenuItem className={classes.option} value='0+'>0+</MenuItem>\n                            <MenuItem className={classes.option} value='1000+'>1000+</MenuItem>\n                            <MenuItem className={classes.option} value='2000+'>2000+</MenuItem>\n                            <MenuItem className={classes.option} value='5000+'>5000+</MenuItem>\n                            <MenuItem className={classes.option} value='10000+'>10000+</MenuItem>\n                            <MenuItem className={classes.option} value='25000+'>25000+</MenuItem>\n                        </Select>\n                    </div>\n\n                    <div className={classes.inputs}>\n                        <InputLabel className={classes.label}>Publication Date</InputLabel>\n                        <TextField className={classes.input}\n                                   name='publication_date'\n                                   value={publication_date}\n                                   onChange={event => onChange(event)}/>\n                        <InputLabel className={classes.label}>Deadline</InputLabel>\n                        <TextField className={classes.input}\n                                   name='deadline'\n                                   value={deadline}\n                                   onChange={event => onChange(event)}/>\n                    </div>\n                    <div className={classes.checkbox_block}>\n                        <InputLabel className={classes.label}>My tasks</InputLabel>\n                        <Checkbox name='email' value={email} onChange={event => onChange(event)}/>\n                    </div>\n                    <div className={classes.search}>\n                        <TextField label='Search'\n                                   className={classes.search_line}\n                                   name='title' value={title}\n                                   onChange={event => onChange(event)}/>\n                    </div>\n                </div>\n            </form>\n            {displayTasks()}\n            <Pagination count={count}\n                        itemsPerPage={3}\n                        currentPage={currentPage}\n                        changePage={changePage}\n                        nextPage={showNextPage}\n                        prevPage={showPrevPage}\n            />\n        </div>\n    )\n}\n\nexport default TasksList\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js",["148"],"import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./SideBar.css\"\nimport {makeStyles} from \"@material-ui/core\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        height: '100%',\n        width: '11%',\n        position: 'fixed',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 3px 10px -2px blue',\n    },\n    items: {\n        backgroundColor: 'white'\n    },\n    item: {\n        display: 'flex',\n        margin: '5%',\n        justifyContent: 'start',\n    },\n    link: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        marginBottom: '10%',\n        fontSize: '22px',\n        marginTop: '15%',\n        color: 'black',\n        '&:hover': {\n            fontSize: '23px',\n            fontWeight: 'bold'\n        },\n    },\n    profileLink: {\n        display: 'flex',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        fontSize: '22px',\n        marginTop: '50%',\n        textAlign: 'center',\n        justifyItems: 'center',\n        color: 'black',\n    },\n    icon: {\n        fontSize: '30px',\n        width: '50px'\n    }\n}))\n\n\nconst SideBar = () => {\n\n    const [showDropdown, setShowDropdown] = useState(true)\n\n    const showDropdownMenu = event => {\n        event.preventDefault()\n        setShowDropdown(!showDropdown)\n    }\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.items}>\n                <div className={classes.item}>\n                    <Link className={classes.profileLink} to=\"/\">\n                        <AccountCircleIcon className={classes.icon}/>Profile\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/tasks\">\n                        <AssignmentIcon className={classes.icon}/>Tasks\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/my_tasks\">\n                        <AssignmentTurnedInIcon className={classes.icon}/>My Tasks\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/tasks/create\">\n                        <CreateIcon className={classes.icon}/>New Task\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/notifications\">\n                        <NotificationsIcon className={classes.icon}/>Notifications\n                    </Link>\n                </div>\n                <div className={classes.item}>\n                    <Link className={classes.link} to=\"/chats\">\n                        <ChatIcon className={classes.icon}/>Chats\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notifications.js",["149"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Notification from \"./Notification\";\nimport {makeStyles} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        width: '45%',\n        marginLeft: '25%'\n    }\n}))\n\n\nconst Notifications = () => {\n    const classes = useStyles()\n    const [notifications, setNotifications] = useState([])\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    useEffect(() => {\n        const fetchNotifications = () => {\n            axios.get('http://localhost:8000/api/notifications/', config).then(response => {\n                setNotifications(response.data)\n            }).catch(error => {\n\n            })\n        }\n        fetchNotifications()\n    }, [])\n\n\n    const displayNotifications = () => {\n        const displayedNotifications = []\n        notifications.map(notification => {\n            return (\n                displayedNotifications.push(\n                    <Notification id={notification.id}\n                                  task={notification.task}\n                                  from_user={notification.from_user}\n                                  send_date={notification.send_date}\n                                  status={notification.status}\n                                  content={notification.content}\n                                  notifications={notifications}\n                                  notification_type={notification.notification_type}\n                    />\n                )\n            )\n        })\n        return displayedNotifications\n    }\n\n    return (\n        <div className={classes.root}>\n            {displayNotifications()}\n        </div>\n    )\n}\n\nexport default Notifications\n\n\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileTabs.js",["150","151"],"import React, {useEffect, useState} from \"react\";\nimport Stats from \"./stats/Stats\";\nimport \"./ProfileTabs.css\"\nimport ProfileEditTab from \"./ProfileEditTab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tab, Tabs} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content',\n        width: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n    },\n    header: {\n        display: 'flex',\n        height: '100%',\n        paddingBottom: '3%',\n        justifyContent: 'start',\n        fontWeight: 'bold',\n        borderBottom: '1px solid'\n    },\n    title: {\n        marginLeft: '2%',\n        fontSize: '25px'\n    },\n    tabs: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '20%',\n        borderRight: '1px solid'\n\n    },\n    tab: {\n        display: 'flex',\n        height: '50px',\n        justifyContent: 'center',\n        fontSize: '18px'\n    },\n    active: {\n        display: 'flex'\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n    },\n    tabContent: {\n        width: '100%',\n        height: '100%'\n    }\n\n}))\n\n\nconst TabContent = props => {\n    const classes = useStyles()\n    const {component, value, index, active, ...other} = props\n\n    return (\n        <div className={classes.tabContent}>\n            {\n                active === value ? component : null\n            }\n        </div>\n    )\n}\n\n\nconst ProfileTabs = () => {\n    const classes = useStyles()\n    const [active, setActive] = useState('editProfile')\n    const handleChange = (event, value) => {\n        if (value === 0) {\n            setActive('editProfile')\n        } else {\n            setActive('stats')\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    My Profile\n                </div>\n            </div>\n            <div className={classes.body}>\n                <Tabs orientation='vertical'\n                      value={active === 'editProfile' ? 0 : 1}\n                      onChange={event => handleChange(event)}\n                      textColor='primary'\n                      indicatorColor='primary'\n                      variant='fullWidth'\n                      className={classes.tabs}>\n                    <Tab className={classes.tab}\n                         onClick={() => setActive('editProfile')}\n                         label='Edit Profile' />\n                    <Tab className={classes.tab}\n                         onClick={() => setActive('stats')}\n                         label='Stats'/>\n                </Tabs>\n                <div className={classes.content}>\n                        <TabContent value='editProfile'\n                                    index={0}\n                                    active={active}\n                                    component={<ProfileEditTab/>}\n                        />\n                        <TabContent value='stats'\n                                    active={active}\n                                    index={1}\n                                    component={<Stats/>}\n                        />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ProfileTabs\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Chat.js",["152","153","154"],"import React, {useEffect, useState} from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport axios from \"axios\";\nimport {Button, InputLabel, makeStyles, Tab, TextareaAutosize, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        gridArea: 'content',\n        flexDirection: 'row',\n        height: '100vh',\n        width: '70%',\n    },\n    message: {\n        border: '2px solid',\n        borderRadius: '9px',\n        margin: '5px',\n        padding: '10px',\n\n        width: '50%'\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        backgroundColor: 'grey',\n        color: 'black'\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        backgroundColor: 'blue',\n        color: 'white'\n    },\n    senderData: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    label: {\n        margin: '0 2% 0',\n        color: 'inherit'\n    },\n    tabs: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRight: '1px solid',\n    },\n    tab: {\n        display: 'flex',\n        width: '100%',\n        borderBottom: '1px solid'\n    },\n    chatBody: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        marginLeft: '10%'\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    messages: {\n        display: 'flex',\n        flexDirection: 'column',\n        border: '1px solid',\n        marginTop: '2%',\n        borderRadius: '7px'\n    },\n    buttons: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: '35%'\n    },\n    button: {\n        width: '20%',\n        margin: '2%'\n    },\n    textarea: {\n        margin: '3% 0 3%',\n        borderRadius: '5px'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    header: {\n        display: 'flex',\n        padding: '4%',\n        border: '2px solid rgba(0,0,0,.1)',\n        boxShadow: '0 3px 10px -2px #404040',\n        backgroundColor: '#fff'\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: '27px',\n        color: '#404040',\n    }\n\n\n}))\n\nconst Message = ({ first_name, last_name, email, content }) => {\n    const classes = useStyles()\n    console.log(email)\n    return (\n        <div\n            className={`${classes.message} ${localStorage.getItem('email') === email ? classes.right : classes.left}`}>\n            {content}\n        </div>\n    )\n}\n\n\n\nconst ChatContent = ({chat, active}) => {\n    const classes = useStyles()\n    const companion = localStorage.getItem('id') === chat.creator.id ? chat.second_member : chat.creator\n    const [history, setHistory] = useState([])\n    const [newMessage, setNewMessage] = useState({\n        from_user: localStorage.getItem('id') !== chat.creator.id ? chat.creator : chat.second_member,\n        to_user: localStorage.getItem('id') !== chat.creator.id ? chat.second_member : chat.creator,\n        content: ''\n    })\n\n    const onChange = event => setNewMessage({...newMessage, [event.target.name]: event.target.value})\n    const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chat.name + '/')\n\n    const parseHistory = history => {\n        let parsedHistory = []\n        history.map(message => {\n            console.log(message)\n            return parsedHistory.push({\n                from_user: {\n                    first_name: message.from_user.split(' ')[0].replace(/['\"]+/g, ' '),\n                    last_name: message.from_user.split(' ')[1].replace(/['\"]+/g, ' '),\n                    email: message.from_user.split(' ')[2].replace(/['\"]+/g, ' ')\n                },\n                to_user: {\n                    first_name: message.to_user.split(' ')[0].replace(/['\"]+/g, ' '),\n                    last_name: message.to_user.split(' ')[1].replace(/['\"]+/g, ' '),\n                    email: message.to_user.split(' ')[2].replace(/['\"]+/g, ' ')\n                },\n                content: message.content\n            })\n        })\n        return parsedHistory\n    }\n\n    useEffect(() => {\n        const checkMessages = () => {\n        client.onopen = () => {\n            console.log('Websocket client connected')\n        }\n        client.onmessage = message => {\n            const dataFromServer = JSON.parse(message.data)\n            if (dataFromServer.length > 1) {\n                setHistory(parseHistory(dataFromServer))\n            } else {\n                console.log('Send message')\n                setHistory([...history, {\n                    from_user: dataFromServer.from_user,\n                    to_user: dataFromServer.to_user,\n                    content: dataFromServer.content,\n                    room_name: chat.name\n                }])\n            }\n        }\n        }\n        checkMessages()\n\n    }, [])\n\n    const fetchHistory = event => {\n        event.preventDefault()\n        client.send(JSON.stringify({\n            'type': 'send_chat_history',\n            'from_user': newMessage.from_user,\n            'to_user': newMessage.to_user,\n            'room_name': chat.name\n        }))\n        console.log('Get history')\n    }\n\n    const sendNewMessage = event => {\n        event.preventDefault()\n        setHistory([...history, newMessage])\n        client.send(JSON.stringify({\n            'type': 'send_new_message',\n            'content': newMessage.content,\n            'from_user': newMessage.from_user,\n            'to_user': newMessage.to_user,\n            'room_name': chat.name\n        }))\n    }\n\n    const displayMessages = () => {\n        let displayedMessages = []\n        history.map(message => {\n            return displayedMessages.push(\n                <Message first_name={message.from_user.first_name}\n                         last_name={message.from_user.last_name}\n                         content={message.content}\n                         email={message.from_user.email}\n                />\n            )\n        })\n        return displayedMessages\n    }\n\n    return (\n        <>\n            {\n                active ? (\n                    <div className={classes.paper}>\n                        <div className={classes.header}>\n                            <InputLabel className={classes.title}>\n                                {companion.first_name} {companion.last_name}\n                            </InputLabel>\n                        </div>\n                        <div className={classes.messages}>\n                            {displayMessages()}\n                        </div>\n                        <form className={classes.form}>\n                            <TextareaAutosize className={classes.textarea}\n                                              placeholder='type new message...'\n                                              name='content'\n                                              rows={20}\n                                              value={newMessage.content}\n                                              onChange={event => onChange(event)}/>\n                            <div className={classes.buttons}>\n                                <Button color='primary'\n                                        variant='contained'\n                                        className={classes.button}\n                                        type='submit'\n                                        onClick={event => sendNewMessage(event)}>\n                                    Send\n                                </Button>\n                                <Button color='primary'\n                                        variant='contained'\n                                        className={classes.button}\n                                        onClick={event => fetchHistory(event)}>\n                                    History\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n\n\nconst Chat = () => {\n    const classes = useStyles()\n    const [chats, setChats] = useState([])\n    const [active, setActive] = useState(0)\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    useEffect(() => {\n        const fetchChats = () => {\n            axios.get('http://localhost:8000/api/chat/', config).then(response => {\n                console.log('Get chats successfully')\n                setChats(response.data.results)\n            }).catch(error => {\n                console.log('Fail')\n                console.log(error)\n            })\n        }\n        fetchChats()\n    }, [])\n\n    const displayTabs = () => {\n        let displayedTabs = []\n        chats.map(chat => {\n            const companion = localStorage.getItem('id') === chat.second_member.id ? chat.creator : chat.second_member\n            return displayedTabs.push(\n                <Tab className={classes.tab}\n                     label={`${companion.first_name} ${companion.last_name}`}\n                     onClick={event => setActive(chat.id)}/>\n            )\n        })\n        return displayedTabs\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.tabs}>\n                {displayTabs()}\n            </div>\n            <div className={classes.chatBody}>\n                {\n                    chats.map(chat => {\n                        console.log(active)\n                        console.log(chat.id)\n                        console.log(chat.creator)\n                        return (\n                            <div>\n                                {active === chat.id ? <ChatContent chat={chat} active={true}/> : null}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default Chat\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/UserTasks.js",["155","156"],"import React, {useEffect, useState} from \"react\";\nimport \"./UserTasks.css\"\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport ReviewCreateModal from \"../ReviewCreateModal\";\nimport Pagination from \"../Pagination\";\nimport NotFound from \"../NotFound\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        gridArea: 'content'\n    }\n}))\n\n\nconst Task = ({ slug, title, deadline, payment, customer, performer, status, id }) => {\n    const classes = useStyles()\n    const [submitType, setSubmitType] = useState('done')\n    const [showReviewCreateModal, setShowReviewCreateModal] = useState(false)\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const onSubmit = event => {\n        event.preventDefault()\n        if (submitType === 'done'){\n            let today = new Date()\n            let dd = String(today.getDate())\n            let mm = String(today.getMonth() + 1)\n            let yyyy = today.getFullYear()\n            today = yyyy + '-' + mm + '-' + dd\n\n            const notificationData = {\n                task: id,\n                from_user: localStorage.getItem('id'),\n                to_user: customer.id === localStorage.getItem('id') ? performer.id : customer.id,\n                send_date: today,\n                content: `${title} was done`,\n                notification_type: 'change_task_status'\n            }\n\n            const body = JSON.stringify(notificationData)\n            axios.post(`http://localhost:8000/api/notifications/create`, body, config).then(response => {\n                console.log('Success')\n                setShowReviewCreateModal(!showReviewCreateModal)\n                }).catch(error => {\n                    console.log('Fail')\n                    console.log(error)\n                })\n        } else {\n            console.log('Start Chat')\n        }\n    }\n\n    return (\n        <div className='user__task'>\n                {\n                    localStorage.getItem('email') === performer.email ? (\n                        <div className='in__process__task__info'>\n                            <label className='title'>{title}</label>\n                            <label className='task__label'>{performer.email}</label>\n                            <div className='user__task__oneline__labels'>\n                                <label className='user__task__payment'>{payment}</label>\n                                <label className='user__task__deadline'>{deadline}</label>\n                            </div>\n                            <form className='send__task__form' onSubmit={event => onSubmit(event)}>\n                                {\n                                    status === 'in_process' ? (\n                                        <button className='send__task__button'\n                                                type='submit'\n                                                onClick={() => setSubmitType('done')}>\n                                            Done\n                                        </button>\n                                    ) : null\n                                }\n                            </form>\n                            <ReviewCreateModal show={showReviewCreateModal}\n                                               setShow={setShowReviewCreateModal}\n                                               customer={customer}\n                                               performer={performer}\n                                               id={id}/>\n                            <label className='user__task__status'>{status}</label>\n                        </div>\n                    ) : (\n                        <div className='user__task__info'>\n                            <label className='title'>{title}</label>\n                            <label className='task__label'>{customer.email}</label>\n                            <label className='user__task__deadline'>{deadline}</label>\n                            <form className='start__chat__form' onSubmit={event => onSubmit(event)}>\n                                <button className='start__chat__button'\n                                        type='submit'\n                                        onClick={() => setSubmitType('chat')}>\n                                    Chat\n                                </button>\n                            </form>\n                            <label className='user__task__status'>{status}</label>\n                        </div>\n                    )\n                }\n        </div>\n    )\n}\n\n\nconst UserTasks = () => {\n    const classes = useStyles()\n    const [userTasks, setUserTasks] = useState([])\n    const [inProcessTasks, setInProcessTasks] = useState([])\n    const [count, setCount] = useState(0)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [nextPage, setNextPage] = useState('')\n    const [previousPage, setPreviousPage] = useState('')\n    const [filterStatus, setFilterStatus] = useState({choice: 'customer__email'})\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    const onChange = event => {\n        console.log(event.target.name)\n        console.log(event.target.value)\n        setFilterStatus({choice: event.target.value})\n    }\n\n    useEffect(() => {\n        const fetchTasks = () => {\n            if (filterStatus.choice === 'performer__email') {\n                axios.get(`http://localhost:8000/api/tasks/?performer__email=${localStorage.getItem('email')}`,\n                config).then(response => {\n                        setInProcessTasks(response.data.results)\n                        setCount(response.data.count)\n                        console.log('Success')\n                        console.log(response.data)\n                     }).catch(error => {\n                        console.log('Fail')\n                        console.log(error)\n                     })\n            } else {\n                console.log(2)\n                axios.get(`http://localhost:8000/api/tasks/?customer__email=${localStorage.getItem('email')}`,\n                config).then(response => {\n                        setUserTasks(response.data.results)\n                        setCount(response.data.count)\n                        console.log('Success')\n                        console.log(userTasks)\n                     }).catch(error => {\n                        console.log('Fail')\n                        console.log(error)\n                     })\n            }\n        }\n        fetchTasks()\n    }, [filterStatus])\n\n    const displayTasks = () => {\n        let tasks = []\n        if (filterStatus.choice === 'performer__email') {\n            tasks = inProcessTasks\n        } else {\n            tasks = userTasks\n        }\n        const displayedTasks = []\n        tasks.map(task => {\n            return displayedTasks.push(\n                <Task customer={task.customer}\n                      title={task.title}\n                      payment={task.payment}\n                      deadline={task.deadline}\n                      slug={task.slug}\n                      performer={task.performer}\n                      status={task.status}\n                      id={task.id}\n                />\n            )\n        })\n        return displayedTasks\n    }\n\n    const showNextPage = () => {\n        axios.get(nextPage).then(response => {\n            filterStatus.choice === 'performer__email' ?\n                setInProcessTasks(response.data.results) : (\n                    setUserTasks(response.data.results)\n                )\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (nextPage) {\n                setCurrentPage(currentPage + 1)\n            }\n            console.log('Success')\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    const showPrevPage = () => {\n        axios.get(previousPage).then(response => {\n            filterStatus.choice === 'performer__email' ?\n                setInProcessTasks(response.data.results) : (\n                    setUserTasks(response.data.results)\n                )\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (previousPage) {\n                setCurrentPage(currentPage - 1)\n            }\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    const changePage = page => {\n        console.log('Change page')\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className='filters'>\n                <select className='user__tasks__filters'\n                        onChange={event => onChange(event)}>\n                    <option className='user__tasks__filter'\n                            name='choice'\n                            value='customer__email'\n                            onChange={event => onChange(event)}>published by me</option>\n                    <option className='user__tasks__filter'\n                            name='choice'\n                            value='performer__email'\n                            onChange={event => onChange(event)}>in process</option>\n                </select>\n            </div>\n            {\n                userTasks.length > 0 || inProcessTasks.length > 0 ? (\n                    <div>\n                        <div className='user__tasks__list'>\n                            {displayTasks()}\n                        </div>\n                        <Pagination itemsPerPage={3}\n                                    count={count}\n                                    currentPage={currentPage}\n                                    changePage={changePage}\n                                    nextPage={showNextPage}\n                                    prevPage={showPrevPage}\n                        />\n                    </div>\n                ) :\n                    <NotFound title='There is no tasks'/>\n            }\n        </div>\n    )\n}\n\nTask.propTypes = {\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    deadline: PropTypes.instanceOf(Date),\n    payment: PropTypes.string.isRequired,\n    customer: PropTypes.object.isRequired,\n    performer: PropTypes.object.isRequired,\n    status: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default UserTasks\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Notification.js",["157","158","159","160"],"import React, {useState} from \"react\";\nimport \"./Notification.css\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\";\nimport {Button, InputLabel, makeStyles, TextareaAutosize} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '2%',\n        border: '1px solid'\n    },\n    label: {\n        fontSize: '20px',\n        marginLeft: '30%',\n        margin: '1%'\n    },\n    left: {\n        marginLeft: '2%'\n    },\n    textarea: {\n        marginLeft: '30%',\n        fontWeight: 'bold',\n        fontSize: '20px'\n    },\n    link: {\n        textDecoration: 'none'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: '30%'\n    },\n    button: {\n        margin: '3%'\n    }\n\n}))\n\n\nconst Notification = ({ id, task, from_user, send_date, status, content, notifications, notification_type }) => {\n    const classes = useStyles()\n    const [replyChoiceType, setReplyChoiceType] = useState('')\n    const [solutionChoiceType, setSolutionChoiceType] = useState('')\n    const [frozen, setFrozen] = useState({\n        status: false\n    })\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n\n    const freezeNotifications = task => {\n        const body = JSON.stringify({status: false})\n        notifications.forEach(notification => {\n            if (notification.task.id === task.id) {\n                axios.put(`http://localhost:8000/api/notifications/update/${notification.id}`, body, config)\n                    .then(response => {\n                    console.log('Success')\n                }).catch(error => {\n                    console.log('Error')\n                })\n            }\n        })\n    }\n\n    const deleteNotification = () => {\n        axios.delete(`http://localhost:8000/api/notifications/delete/${id}`, config).then(response => {\n            console.log('Success')\n        }).catch(error => {\n            console.log('Error')\n        })\n    }\n\n    const handleReplyChoice = event => {\n        console.log('SUBMIT')\n        event.preventDefault()\n        if (replyChoiceType === 'accept') {\n            const body = JSON.stringify({status: 'in_process', performer: from_user.id, title: task.title})\n            axios.put(`http://localhost:8000/api/tasks/update/${task.slug}`, body, config).then(response => {\n                deleteNotification()\n                console.log('Success')\n            }).catch(error => {\n                console.log(error)\n            })\n        } else {\n            deleteNotification()\n        }\n    }\n\n    const handleSolutionChoice = event => {\n        if (solutionChoiceType === 'accept') {\n            const body = JSON.stringify({status: 'done', title: task.title})\n            axios.put(`http://localhost:8000/api/tasks/update/${task.slug}`, body, config).then(response => {\n                console.log('Success')\n            }).catch(error => {\n                console.log('Fail')\n                console.log(error)\n            })\n        } else {\n            axios.delete(`http://localhost:8000/api/notifications/delete/${id}`, config).then(response => {\n                console.log('Success')\n            }).catch(error => {\n                console.log('Error')\n            })\n        }\n    }\n\n    const startChat = () => {\n        const body = JSON.stringify({\n            from_user: from_user.id,\n            to_user: localStorage.getItem('id')\n        })\n        axios.post(`http://localhost:8000/api/chat/create/`, body, config).then(response => {\n            setReplyChoiceType('accept')\n            //TODO delete other replies and change task status into IN_PROCESS\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            {\n                //TODO if status is CHECKED make it less light\n            }\n            <InputLabel className={`${classes.label} ${classes.left}`}>New</InputLabel>\n            <InputLabel className={classes.label}>Date: {send_date}</InputLabel>\n            <Link className={classes.link} to={`tasks/${task.slug}`}>\n                <InputLabel className={classes.label}>{task.title}</InputLabel>\n            </Link>\n            <InputLabel className={classes.label}>\n                From: {from_user.email} {from_user.first_name} {from_user.last_name}\n            </InputLabel>\n            <InputLabel className={classes.label}>Status: {task.status}</InputLabel>\n            <Box className={classes.textarea}>{content}</Box>\n            {\n                notification_type === 'reply' ? (\n                    <form className={classes.form} onSubmit={event => handleReplyChoice(event)}>\n                        <Button className={classes.button}\n                                variant='contained'\n                                color='primary'\n                                type='submit'\n                                onClick={() => setReplyChoiceType('accept')}>\n                            Accept\n                        </Button>\n                        <Button className={classes.button}\n                                variant='contained'\n                                color='secondary'\n                                type='submit'\n                                onClick={() => setReplyChoiceType('cancel')}>\n                            Cancel\n                        </Button>\n                    </form>\n                ) : (\n                    <form className='accept__task__solution__form' onSubmit={event => handleSolutionChoice(event)}>\n                        <button type='submit' className='solution__accept' onClick={() => startChat()}>\n                            Accept\n                        </button>\n                        <button type='submit' className='solution__cancel' onClick={() => setSolutionChoiceType('cancel')}>\n                            Cancel\n                        </button>\n                    </form>\n                )\n            }\n        </div>\n    )\n}\n\nNotification.propTypes = {\n    id: PropTypes.number.isRequired,\n    task: PropTypes.object.isRequired,\n    from_user: PropTypes.object.isRequired,\n    send_date: PropTypes.instanceOf(Date).isRequired,\n    status: PropTypes.bool.isRequired,\n    content: PropTypes.string.isRequired,\n    notifications: PropTypes.array.isRequired,\n    notification_type: PropTypes.string.isRequired\n}\n\nexport default Notification\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ProfileEditTab.js",["161"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./ProfileTabs.css\"\nimport \"./ProfileEditTab.css\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, TextField} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '10%',\n        marginLeft: '5%',\n        width: '70%'\n    },\n    editName: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    nameInput: {\n        margin: '2% 0 2%',\n        width: '100%'\n    },\n    input: {\n        margin: '2% 0 2%'\n    },\n    button: {\n        width: '30%',\n        marginLeft: '35%'\n    }\n}))\n\n\nconst ProfileEditTab = () => {\n    const classes = useStyles()\n    const [profile, setProfile] = useState({\n        email: '',\n        phone: '',\n        first_name: '',\n        last_name: '',\n        password: ''\n    })\n\n    useEffect(() => {\n        const fetchProfileDetail = () => {\n            axios.get(`http://localhost:8000/api/accounts/${userEmail}`, config).then(response => {\n                setProfile(response.data)\n                console.log(response.data)\n                console.log('Profile received successfully')\n            }).catch(error => {\n                console.log('Profile received fail')\n            })\n        }\n        fetchProfileDetail()\n    }, [])\n     const { email, phone, first_name, last_name, password } = profile\n     const config = {\n         headers: {\n             'Content-Type': 'application/json',\n             'Authorization': `Bearer ${localStorage.getItem('token')}`\n         }\n     }\n     const userEmail = localStorage.getItem('email')\n\n     const onChange = event => setProfile({...profile, [event.target.name]: event.target.value})\n\n     const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === '') {\n                delete obj[key]\n            }\n            if (key === 'phone' && value.substr(0, 0) === '8') {\n                obj.phone = '+7' + value.substr(2)\n            }\n        })\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        clear(profile)\n        const body = JSON.stringify(profile)\n        axios.put(`http://localhost:8000/api/accounts/update/${userEmail}`, body, config).then(response => {\n            console.log('Profile updated successfully')\n            setProfile(response.data)\n        }).catch(error => {\n            console.log('Profile updated fail')\n        })\n    }\n\n    return (\n        <div>\n            <form className={classes.root} onSubmit={event => onSubmit(event)}>\n                {/*<div className=\"avatar\">*/}\n                {/*    <img src=\"\"/>*/}\n                {/*</div>*/}\n                <div className={classes.editName}>\n                    <TextField className={classes.nameInput}\n                               variant='outlined'\n                               label=\"First Name\"\n                               name='first_name'\n                               placeholder={first_name}\n                               value={first_name}\n                               onChange={event => onChange(event)}/>\n                    <TextField className={classes.nameInput}\n                               name='last_name'\n                               value={last_name}\n                               placeholder={last_name}\n                               variant='outlined'\n                               label='Last Name'\n                               onChange={event => onChange(event)}/>\n                </div>\n                <TextField className={classes.input}\n                           name='email'\n                           variant='outlined'\n                           label='Email'\n                           placeholder={email}\n                           value={email}\n                           onChange={event => onChange(event)}/>\n                <TextField className={classes.input}\n                           variant='outlined'\n                           label='Phone'\n                           placeholder={phone}\n                           name='phone'\n                           value={phone}\n                           onChange={event => onChange(event)}/>\n                <TextField className={classes.input}\n                           variant='outlined'\n                           label='Password'\n                           type=\"password\"\n                           name='password'\n                           value={password}\n                           onChange={event => onChange(event)}/>\n                <Button className={classes.button} variant='contained' color='primary' type='submit'>Save</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default ProfileEditTab\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NavBar.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/ReviewCreateModal.js",["162","163","164"],"import React, {useState} from \"react\";\nimport \"./ReviewCreateModal.css\"\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\"\n\n\nconst ReviewCreateModal = ({ show, setShow, performer, customer, id }) => {\n    const [modalData, setModalData] = useState({\n        from_user: localStorage.getItem('id'),\n        to_user: customer.id === localStorage.getItem('id') ? performer.id : customer.id,\n        task: id,\n        content: '',\n        mark: ''\n    })\n    const { from_user, to_user, task, content, mark } = modalData\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const onChange = event => setModalData({...modalData, [event.target.name]: event.target.value})\n    const onSubmit = event => {\n        event.preventDefault()\n        console.log(modalData)\n        const body = JSON.stringify(modalData)\n        axios.post('http://localhost:8000/api/reviews/create', body, config).then(response => {\n            console.log('Success')\n            setShow(!show)\n        }).catch(error => {\n            console.log('Fail')\n            console.log(error)\n        })\n    }\n\n    if (!show) {\n        return null\n    }\n\n    return (\n        <div className='review__modal'>\n            <label className='modal__title'>Create review</label>\n            <form className='modal__form' onSubmit={event => onSubmit(event)}>\n                <div className='modal__form__inputs'>\n                    <select className='modal__mark__select'\n                            name='mark'\n                            value={mark}\n                            onChange={event => onChange(event)}>\n                        <option className='modal__mark__option'>0</option>\n                        <option className='modal__mark__option'>1</option>\n                        <option className='modal__mark__option'>2</option>\n                        <option className='modal__mark__option'>3</option>\n                        <option className='modal__mark__option'>4</option>\n                        <option className='modal__mark__option'>5</option>\n                        <option className='modal__mark__option'>6</option>\n                        <option className='modal__mark__option'>7</option>\n                        <option className='modal__mark__option'>8</option>\n                        <option className='modal__mark__option'>9</option>\n                        <option className='modal__mark__option'>10</option>\n                    </select>\n                    <textarea className='modal__content__textarea'\n                              placeholder='Type review...'\n                              name='content'\n                              value={content}\n                              onChange={event => onChange(event)}\n                    />\n                </div>\n                <button className='modal__form__button' type='submit' name='content' value={content}>Send</button>\n            </form>\n        </div>\n    )\n}\n\nReviewCreateModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    performer: PropTypes.object.isRequired,\n    customer: PropTypes.object.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default ReviewCreateModal\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/Stats.js",["165"],"import React, {useEffect, useState} from \"react\";\nimport \"./Stats.css\"\nimport PieChart from \"./PieChart\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '10%',\n        marginLeft: '5%',\n        width: '70%',\n    },\n\n}))\n\n\nconst Stats = () => {\n    const classes = useStyles()\n    const [barChartData, setBarChartData] = useState({\n        solved_tasks_num: 0,\n        failed_tasks_num: 0,\n        created_tasks_num: 0,\n        total_tasks_num: 0\n    })\n    const { solved_tasks_num, failed_tasks_num, created_tasks_num, total_tasks_num } = barChartData\n\n    const [lineChartData, setLineChartData] = useState({\n        average_mark: 0,\n        reviews_num: 0\n    })\n    const { average_tasks_num, reviews_num } = lineChartData\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    useEffect(() => {\n        const fetchStats = () => {\n            axios.get(`http://localhost:8000/api/stats/detail`, config).then(response => {\n                const data = response.data\n                setBarChartData({\n                    solved_tasks_num: data.solved_tasks_num,\n                    failed_tasks_num: data.failed_tasks_num,\n                    created_tasks_num: data.created_tasks_num,\n                    total_tasks_num: data.total_tasks_num\n                })\n                setLineChartData({\n                    average_mark: data.average_mark,\n                    reviews_num: data.reviews_num\n                })\n                console.log('Success')\n            }).catch(error => {\n                console.log('Fail')\n            })\n\n        }\n        fetchStats()\n    }, [])\n\n\n    return (\n        <div className={classes.root}>\n                <PieChart solved_tasks_num={solved_tasks_num}\n                          failed_tasks_num={failed_tasks_num}\n                          created_tasks_num={created_tasks_num}\n                          total_tasks_num={total_tasks_num}\n                />\n                <BarChart average_mark={average_tasks_num}\n                          reviews_num={reviews_num}\n                />\n        </div>\n    )\n}\n\n\nexport default Stats\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/BarChart.js",["166"],"import React from \"react\";\nimport \"./LineChart.css\"\nimport PropTypes from \"prop-types\"\nimport { Line, Bar } from \"react-chartjs-2\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        marginBottom: '3%'\n    }\n}))\n\n\nconst BarChart = ({ average_mark, reviews_num }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Bar type='line' height={400} width={300} data={{\n                labels: ['average_mark', 'reviews'],\n                datasets: [{\n                    label: 'rate stats',\n                    backgroundColor: ['red', 'blue'],\n                    data: [7.5, 12]\n                }]\n            }} options={{\n                     maintainAspectRatio: false\n                 }}\n            />\n        </div>\n    )\n}\n\nBarChart.propTypes = {\n    average_mark: PropTypes.number.isRequired,\n    reviews_num: PropTypes.number.isRequired\n}\n\n\nexport default BarChart\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/LineChart.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/stats/PieChart.js",["167"],"import React from \"react\";\nimport \"./BarChart.css\"\nimport {Bar, Pie} from \"react-chartjs-2\"\nimport PropTypes from \"prop-types\"\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    }\n}))\n\n\nconst PieChart = ({ solved_tasks_num, failed_tasks_num, created_tasks_num, total_tasks_num }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Pie height={400}\n                 width={300}\n                 data={{\n                     labels: ['solved', 'failed', 'created', 'total'],\n                     datasets: [{\n                         label: 'tasks stat',\n                         backgroundColor: ['green', 'red', 'blue', 'grey'],\n                         data: [4, 2, created_tasks_num, total_tasks_num]\n                     }]\n                 }}\n                 options={{\n                     maintainAspectRatio: false\n                 }}\n                 type='bar'\n            />\n        </div>\n    )\n}\n\n\nPieChart.propTypes = {\n    solved_tasks_num: PropTypes.number.isRequired,\n    failed_tasks_num: PropTypes.number.isRequired,\n    created_tasks_num: PropTypes.number.isRequired,\n    total_tasks_num: PropTypes.number.isRequired\n}\n\n\nexport default PieChart\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/auth/SignUp.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/auth/SignIn.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Layout.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":58,"column":52,"nodeType":"174","messageId":"175","endLine":58,"endColumn":60},{"ruleId":"176","severity":1,"message":"177","line":193,"column":8,"nodeType":"178","endLine":193,"endColumn":10,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":113,"column":8,"nodeType":"178","endLine":113,"endColumn":17,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"182","line":115,"column":11,"nodeType":"174","messageId":"175","endLine":115,"endColumn":19},{"ruleId":"172","severity":1,"message":"183","line":121,"column":11,"nodeType":"174","messageId":"175","endLine":121,"endColumn":25},{"ruleId":"172","severity":1,"message":"184","line":67,"column":11,"nodeType":"174","messageId":"175","endLine":67,"endColumn":27},{"ruleId":"176","severity":1,"message":"185","line":36,"column":8,"nodeType":"178","endLine":36,"endColumn":10,"suggestions":"186"},{"ruleId":"172","severity":1,"message":"187","line":1,"column":16,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"188","line":65,"column":48,"nodeType":"174","messageId":"175","endLine":65,"endColumn":53},{"ruleId":"172","severity":1,"message":"189","line":4,"column":64,"nodeType":"174","messageId":"175","endLine":4,"endColumn":73},{"ruleId":"176","severity":1,"message":"190","line":172,"column":8,"nodeType":"178","endLine":172,"endColumn":10,"suggestions":"191"},{"ruleId":"176","severity":1,"message":"185","line":277,"column":8,"nodeType":"178","endLine":277,"endColumn":10,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"193","line":21,"column":11,"nodeType":"174","messageId":"175","endLine":21,"endColumn":18},{"ruleId":"176","severity":1,"message":"194","line":163,"column":8,"nodeType":"178","endLine":163,"endColumn":22,"suggestions":"195"},{"ruleId":"172","severity":1,"message":"196","line":5,"column":41,"nodeType":"174","messageId":"175","endLine":5,"endColumn":57},{"ruleId":"172","severity":1,"message":"197","line":49,"column":12,"nodeType":"174","messageId":"175","endLine":49,"endColumn":18},{"ruleId":"172","severity":1,"message":"198","line":49,"column":20,"nodeType":"174","messageId":"175","endLine":49,"endColumn":29},{"ruleId":"172","severity":1,"message":"199","line":59,"column":11,"nodeType":"174","messageId":"175","endLine":59,"endColumn":30},{"ruleId":"176","severity":1,"message":"200","line":56,"column":8,"nodeType":"178","endLine":56,"endColumn":10,"suggestions":"201"},{"ruleId":"172","severity":1,"message":"202","line":15,"column":13,"nodeType":"174","messageId":"175","endLine":15,"endColumn":22},{"ruleId":"172","severity":1,"message":"203","line":15,"column":24,"nodeType":"174","messageId":"175","endLine":15,"endColumn":31},{"ruleId":"172","severity":1,"message":"204","line":15,"column":33,"nodeType":"174","messageId":"175","endLine":15,"endColumn":37},{"ruleId":"176","severity":1,"message":"185","line":64,"column":8,"nodeType":"178","endLine":64,"endColumn":10,"suggestions":"205"},{"ruleId":"172","severity":1,"message":"206","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"207","line":3,"column":9,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'customer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customer', 'props.match', and 'props.slug'. Either include them or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'deadline', 'email', 'payment', 'publication_date', 'status', and 'title'. Either include them or remove the dependency array.",["211"],"'onSubmit' is assigned a value but never used.","'handleCheckbox' is assigned a value but never used.","'showDropdownMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["212"],"'useEffect' is defined but never used.","'other' is assigned a value but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.name', 'client', and 'history'. Either include them or remove the dependency array. You can also do a functional update 'setHistory(h => ...)' if you only need 'history' in the 'setHistory' call.",["213"],["214"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config' and 'userTasks'. Either include them or remove the dependency array.",["215"],"'TextareaAutosize' is defined but never used.","'frozen' is assigned a value but never used.","'setFrozen' is assigned a value but never used.","'freezeNotifications' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config' and 'userEmail'. Either include them or remove the dependency array.",["216"],"'from_user' is assigned a value but never used.","'to_user' is assigned a value but never used.","'task' is assigned a value but never used.",["217"],"'Line' is defined but never used.","'Bar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"222","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"222","fix":"231"},"Update the dependencies array to be: [customer, props.match, props.slug]",{"range":"232","text":"233"},"Update the dependencies array to be: [deadline, email, filters, payment, publication_date, status, title]",{"range":"234","text":"235"},"Update the dependencies array to be: [config]",{"range":"236","text":"237"},"Update the dependencies array to be: [chat.name, client, history]",{"range":"238","text":"239"},{"range":"240","text":"237"},"Update the dependencies array to be: [config, filterStatus, userTasks]",{"range":"241","text":"242"},"Update the dependencies array to be: [config, userEmail]",{"range":"243","text":"244"},{"range":"245","text":"237"},[5407,5409],"[customer, props.match, props.slug]",[2815,2824],"[deadline, email, filters, payment, publication_date, status, title]",[964,966],"[config]",[4850,4852],"[chat.name, client, history]",[8725,8727],[6817,6831],"[config, filterStatus, userTasks]",[1382,1384],"[config, userEmail]",[1908,1910]]