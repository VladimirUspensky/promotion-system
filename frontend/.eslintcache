[{"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js":"1","/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js":"2","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js":"3","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js":"4","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Profile.js":"5","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/About.js":"6","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/Contacts.js":"7","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignUp.js":"8","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignIn.js":"9","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js":"10","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js":"11","/home/vladimir/PycharmProjects/promotion_system/frontend/src/hocs/Layout.js":"12","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js":"13","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/Chat.js":"14","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js":"15","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js":"16","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js":"17","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js":"18","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/websocket.js":"19","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js":"20","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/StartedPage.js":"21","/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js":"22","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/NavBar.js":"23","/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js":"24","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js":"25","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js":"26","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/chat.js":"27"},{"size":478,"mtime":1621195356786,"results":"28","hashOfConfig":"29"},{"size":2729,"mtime":1621198599914,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610468760874,"results":"31","hashOfConfig":"29"},{"size":120,"mtime":1619353835055,"results":"32","hashOfConfig":"29"},{"size":5782,"mtime":1621112607111,"results":"33","hashOfConfig":"29"},{"size":110,"mtime":1619354089558,"results":"34","hashOfConfig":"29"},{"size":119,"mtime":1619354089550,"results":"35","hashOfConfig":"29"},{"size":5645,"mtime":1621198366109,"results":"36","hashOfConfig":"29"},{"size":2726,"mtime":1621198366085,"results":"37","hashOfConfig":"29"},{"size":2806,"mtime":1620731626323,"results":"38","hashOfConfig":"29"},{"size":7385,"mtime":1621109842449,"results":"39","hashOfConfig":"29"},{"size":494,"mtime":1621073424726,"results":"40","hashOfConfig":"29"},{"size":7074,"mtime":1621098031992,"results":"41","hashOfConfig":"29"},{"size":8559,"mtime":1620230676164,"results":"42","hashOfConfig":"29"},{"size":709,"mtime":1620736139406,"results":"43","hashOfConfig":"29"},{"size":1400,"mtime":1620723944603,"results":"44","hashOfConfig":"29"},{"size":1915,"mtime":1620731629303,"results":"45","hashOfConfig":"29"},{"size":1727,"mtime":1620670270171,"results":"46","hashOfConfig":"29"},{"size":2490,"mtime":1620126105924,"results":"47","hashOfConfig":"29"},{"size":1601,"mtime":1620158942738,"results":"48","hashOfConfig":"29"},{"size":280,"mtime":1621072635500,"results":"49","hashOfConfig":"29"},{"size":483,"mtime":1620159804838,"results":"50","hashOfConfig":"29"},{"size":581,"mtime":1621072202422,"results":"51","hashOfConfig":"29"},{"size":385,"mtime":1621198652938,"results":"52","hashOfConfig":"29"},{"size":153,"mtime":1620160667121,"results":"53","hashOfConfig":"29"},{"size":1443,"mtime":1621198366101,"results":"54","hashOfConfig":"29"},{"size":822,"mtime":1621198366093,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"mnbbjl",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},"/home/vladimir/PycharmProjects/promotion_system/frontend/src/index.js",[],["121","122"],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/App.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reportWebVitals.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/NotFound.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Profile.js",["123","124"],"import React, {useEffect, useState} from \"react\";\nimport \"./Profile.css\"\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nconst Profile = () => {\n    const [profile, setProfile] = useState({\n        email: '',\n        phone: '',\n        first_name: '',\n        last_name: '',\n        password: ''\n    })\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    }\n    const userEmail = localStorage.getItem('email')\n\n    useEffect(() => {\n        const fetchProfileDetail = () => {\n            axios.get(`http://localhost:8000/api/accounts/${userEmail}`, config).then(response => {\n                setProfile(response.data)\n                console.log(response.data)\n                console.log('Profile received successfully')\n            }).catch(error => {\n                console.log('Profile received fail')\n            })\n        }\n        fetchProfileDetail()\n    }, [])\n\n    const { email, phone, first_name, last_name, password } = profile\n\n    const onChange = event => setProfile({...profile, [event.target.name]: event.target.value})\n    const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n            if (key === 'phone' && value.substr(0, 0) === '8') {\n                obj.phone = '+7' + value.substr(2)\n            }\n        })\n    }\n    const onSubmit = event => {\n        event.preventDefault()\n        clear(profile)\n        const body = JSON.stringify(profile)\n        axios.put(`http://localhost:8000/api/accounts/update/${userEmail}`, body, config).then(response => {\n            console.log('Profile updated successfully')\n            setProfile(response.data)\n        }).catch(error => {\n            console.log('Profile updated fail')\n        })\n    }\n\n    return (\n        <div className=\"profile\">\n            <div className=\"profile__header\">\n                <div className=\"header__title\">\n                    My Profile\n                </div>\n            </div>\n            <div className=\"profile__tabs\">\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Edit Profile</Link>\n                </div>\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Chats</Link>\n                </div>\n                <div className=\"profile__tab\">\n                    <Link className=\"profile__tab__link\" to=\"#\">Stats</Link>\n                </div>\n            </div>\n            <form className=\"edit__profile\" onSubmit={event => onSubmit(event)}>\n                <div className=\"tab__name\">\n                    Edit Profile\n                </div>\n                <div className=\"avatar\">\n                    <img src=\"\"/>\n                </div>\n                <div className=\"edit__name\">\n                    <div className=\"edit__name__block1\">\n                        <label className=\"edit__name__label\">\n                            First Name\n                            <input className=\"edit__name__input\"\n                                   placeholder={profile.first_name}\n                                   name='first_name'\n                                   value={first_name}\n                                   onChange={event => onChange(event)}/>\n                        </label>\n                    </div>\n                    <div className=\"edit__name__block2\">\n                        <label className=\"edit__name__label\">\n                            Last Name\n                            <input className=\"edit__name__input\"\n                                   placeholder={profile.last_name}\n                                   name='last_name'\n                                   value={last_name}\n                                   onChange={event => onChange(event)}/>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"edit__email\">\n                    <label className=\"edit__email__label\">\n                        Edit Email <br/>\n                        <input className=\"edit__email__input\"\n                               placeholder={profile.email}\n                               name='email'\n                               value={email}\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"edit__phone\">\n                    <label className=\"edit__phone__label\">\n                        Edit Phone <br/>\n                        <input className=\"edit__phone__input\"\n                               placeholder={profile.phone}\n                               name='phone'\n                               value={phone}\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"edit__password\">\n                    <label className=\"edit__password__label\">\n                        Edit Password <br/>\n                        <input className=\"edit__password__input\"\n                               type=\"password\"\n                               name='password'\n                               value={password}\n                               placeholder='password'\n                               onChange={event => onChange(event)}/>\n                    </label>\n                </div>\n                <div className=\"profile__save__button__block\">\n                    <button className=\"profile__save__button\" type='submit'>Save</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Profile\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/About.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/Contacts.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignUp.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/SignIn.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskCreate.js",["125"],"import React, {useState} from \"react\";\nimport \"./TaskCreate.css\"\nimport axios from \"axios\";\n\n\nconst TaskCreate = () => {\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: '',\n        customer: localStorage.getItem('id')\n    })\n\n    const { title, description, deadline, payment, customer } = formData\n\n    const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n    const onSubmit = event => {\n        event.preventDefault()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n        const body = JSON.stringify(formData)\n        axios.post('http://localhost:8000/api/tasks/create', body, config).then(response => {\n            console.log('success')\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div className='task__create'>\n            <div className=\"task__create__header\">\n                <div className=\"task__create__header__title\">\n                    Create New Task\n                </div>\n            </div>\n            <div className=\"task__create__block\">\n                <form className=\"task__create__form\" onSubmit={event => onSubmit(event)}>\n                    <input className=\"task__create__title__input\"\n                           placeholder=\"title\"\n                           name='title'\n                           value={title}\n                           onChange={event => onChange(event)}/>\n                    <textarea className=\"task__create__description__textarea\"\n                              placeholder=\"description\"\n                              name='description'\n                              value={description}\n                              onChange={event => onChange(event)}/>\n                    <div className=\"task__create__oneline__inputs\">\n                        <input className=\"task__create__deadline__input\"\n                               placeholder=\"deadline\"\n                               name='deadline'\n                               value={deadline}\n                               onChange={event => onChange(event)}/>\n                        <input className=\"task__create__payment__input\"\n                               placeholder=\"payment\"\n                               name='payment'\n                               value={payment}\n                               onChange={event => onChange(event)}/>\n                    </div>\n\n                    <button type=\"submit\" className=\"task__create__button\">Create New Task</button>\n\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\nexport default TaskCreate\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TaskDetail.js",["126"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./TaskDetail.css\"\nimport Reply from \"./Reply\";\n\n\nconst TaskDetail = (props) => {\n    const [replies, setReplies] = useState([])\n    const [taskDetail, setTaskDetail] = useState({})\n    const [customer, setCustomer] = useState({})\n    const [isEditable, setIsEditable] = useState(false)\n    const [submitType, setSubmitType] = useState('')\n    const [formData, setFormData] = useState({\n        content: '',\n        send_date: '',\n        from_user: 0,\n        task: 0\n    })\n    const [editFormData, setEditFormData] = useState({\n        title: '',\n        description: '',\n        deadline: '',\n        payment: ''\n    })\n\n    const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n    const { title, description, deadline, payment } = editFormData\n\n    const { content } = formData\n\n    const onChange = event => {\n        setFormData({...formData, [event.target.name]: event.target.value})\n    }\n\n    const onEditFormChange = event => {\n        setEditFormData({...editFormData, [event.target.name]: event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        const send_date = new Date().getUTCDate()\n        const task = taskDetail.id\n        const from_user = localStorage.getItem('id')\n        const body = JSON.stringify({ content, send_date, from_user, task })\n\n        axios.post('http://localhost:8000/api/tasks/reply/create', body, config).then(response => {\n            console.log('Success reply post')\n        }).catch(error => {\n            console.log('Error reply post')\n        })\n    }\n\n    const handleEditButton = event => setIsEditable(!isEditable)\n\n    const clear = obj => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value === \"\") {\n                delete obj[key]\n            }\n        })\n    }\n\n    const handleEditDeleteTask = event => {\n        event.preventDefault()\n        clear(editFormData)\n        const body = JSON.stringify(editFormData)\n        const slug = window.location.pathname.split('/').pop()\n\n        if (submitType === 'delete') {\n            axios.delete(`http://localhost:8000/api/tasks/delete/${slug}`, config).then(response => {\n                console.log('Deleted task successfully')\n            }).catch(error => {\n                console.log('Deleted task failed')\n            })\n        } else {\n            axios.put(`http://localhost:8000/api/tasks/update/${slug}`, body, config).then(response => {\n                setTaskDetail(response.data)\n                console.log('Updated task successfully')\n            }).catch(error => {\n                console.log('Updated task failed')\n            })\n        }\n    }\n\n    useEffect(() => {\n        const fetchTaskDetail = () => {\n            const slug = props.match.params.slug\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            }\n            axios.get(`http://localhost:8000/api/tasks/${slug}`, config).then(response => {\n                setTaskDetail(response.data)\n                setCustomer(response.data.customer)\n                setReplies(response.data.replies)\n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        fetchTaskDetail()\n    }, [])\n\n    const displayReplies = () => {\n        let displayedReplies = []\n        console.log(replies)\n        replies.map(reply => {\n            return displayedReplies.push(\n                <Reply send_date={reply.send_date}\n                       content={reply.content}\n                       last_name={reply.from_user.last_name}\n                       first_name={reply.from_user.first_name}/>\n            )\n        })\n        return displayedReplies\n    }\n\n    return (\n        <div className='task__detail'>\n            <div className='task__detail__oneline__fields'>\n                <label className='task__detail__field'>{taskDetail.published_date}</label>\n                <label className='task__detail__field'>{taskDetail.deadline}</label>\n            </div>\n            <text className='task__detail__description'>{taskDetail.description}</text>\n            <div className='task__detail__oneline__fields'>\n                <label className='task__detail__field'>{taskDetail.status}</label>\n                <label className='task__detail__field'>{taskDetail.payment}</label>\n            </div>\n            {\n                customer.email === localStorage.getItem('email') ? (\n                    <button className='edit__task__button' onClick={event => handleEditButton(event)}>Edit</button>\n                ) : null\n            }\n            {\n                isEditable ? (\n                    <form className='task__edit__form' onSubmit={event => handleEditDeleteTask(event)}>\n                        <input className='edit__task__field'\n                               placeholder='title'\n                               name='title'\n                               value={title}\n                               onChange={event => onEditFormChange(event)}/>\n                        <textarea className='task__edit__description'\n                                  placeholder='description'\n                                  name='description'\n                                  value={description}\n                                  onChange={event => onEditFormChange(event)}/>\n                        <input className='edit__task__field'\n                               placeholder='payment'\n                               name='payment'\n                               value={payment}\n                               onChange={event => onEditFormChange(event)}/>\n                        <input className='edit__task__field'\n                               placeholder='deadline'\n                               name='deadline'\n                               value={deadline}\n                               onChange={event => onEditFormChange(event)}/>\n                        <button className='update__task__button'\n                                type='submit'\n                                onClick={event => setSubmitType('update')}>\n                            Update\n                        </button>\n                        <button className='delete__task__button'\n                                type='submit'\n                                onClick={event => setSubmitType('delete')}>\n                            Delete\n                        </button>\n                    </form>\n                ) : null\n            }\n            <form className='send__reply__form' onSubmit={event => onSubmit(event)}>\n                <textarea className='send__reply__textarea'\n                          placeholder='type your reply'\n                          name='content'\n                          value={content}\n                          onChange={event => onChange(event)}/>\n                <button className='send__reply__button'>Send</button>\n            </form>\n            <div className='reply__list'>\n                {displayReplies()}\n            </div>\n        </div>\n\n    )\n}\n\nexport default TaskDetail\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/hocs/Layout.js",["127","128"],"import React from \"react\";\n//import Navbar from \"../components/NavBar\"\nimport \"./Layout.css\"\nimport SideBar from \"../components/SideBar\";\nimport store from \"../store\";\nimport StartedPage from \"../components/started_page/StartedPage\";\n\nconst layout = (props) => (\n    <div className='main__template'>\n\n        <SideBar />\n\n        {/*{*/}\n        {/*    store.getState().auth.isAuthenticated ? <SideBar /> : null*/}\n        {/*}*/}\n\n        {props.children}\n    </div>\n)\n\nexport default layout\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/TasksList.js",["129"],"import React, {useEffect, useState} from \"react\";\nimport \"./TasksList.css\"\nimport axios from \"axios\";\nimport Task from \"./Task\";\nimport Pagination from \"../Pagination\";\n\n\nconst TasksList = () => {\n    const [tasks, setTasks] = useState([])\n    const [count, setCount] = useState(0)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [nextPage, setNextPage] = useState('')\n    const [previousPage, setPreviousPage] = useState('')\n    const [filters, setFilters] = useState({\n        title: '',\n        status: '',\n        payment: '',\n        deadline: '',\n        publication_date: '',\n        email: ''\n    })\n\n    const {title, status, payment, deadline, publication_date, email} = filters\n\n    useEffect(() => {\n        const fetchTasks = () => {\n            axios.get(\n                    `http://localhost:8000/api/tasks/?status=${status}&title=${title}&payment=${payment}&deadline=${deadline}&publication_date=${publication_date}&customer__email=${email}`\n            ).then(response => {\n                setTasks(response.data.results)\n                setCount(response.data.count)\n                setNextPage(response.data.next)\n                console.log(filters)\n                setPreviousPage(response.data.previous)\n            }).catch(error => {\n                console.log('Fetch tasks error')\n            })\n        }\n        fetchTasks()\n    }, [filters])\n\n    const onSubmit = event => {\n        event.preventDefault()\n    }\n\n    const onChange = event => setFilters({...filters, [event.target.name]: event.target.value})\n\n    const handleCheckbox = event => {\n        if (filters.email) {\n            setFilters({...filters, email: ''})\n        } else {\n            setFilters({...filters, email: localStorage.getItem('email')})\n        }\n    }\n\n    const displayTasks = () => {\n        let displayedTasks = []\n        tasks.map(task => {\n            return displayedTasks.push(\n                <Task\n                    slug={task.slug}\n                    title={task.title}\n                    payment={task.payment}\n                    description={task.description}\n                    published_date={task.published_date}\n                    deadline={task.deadline}\n                    status={task.status}\n                />\n            )\n        })\n        return displayedTasks\n    }\n\n    const showNextPage = () => {\n        axios.get(nextPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (nextPage) {\n                setCurrentPage(currentPage + 1)\n            }\n            console.log(response.data)\n        }).catch(error => {\n            console.log('ShowNextPage error')\n        })\n    }\n\n    const showPrevPage = () => {\n        axios.get(previousPage).then(response => {\n            setTasks(response.data.results)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            if (previousPage) {\n                setCurrentPage(currentPage - 1)\n            }\n        }).catch(error => {\n            console.log('ShowPreviousPage error')\n        })\n    }\n\n    const changePage = page => {\n        axios.get(`http://localhost:8000/api/tasks/?page=${page}`).then(response => {\n            setTasks(response.data.results)\n            setCount(response.data.count)\n            setNextPage(response.data.next)\n            setPreviousPage(response.data.previous)\n            setCurrentPage(page)\n        }).catch(error => {\n            console.log('ChangePage error')\n        })\n    }\n\n\n    return (\n        <div className=\"tasks__list\">\n            <div className=\"tasks__list__header\">\n                <div className=\"tasks__list__header__title\">\n                    Tasks List\n                </div>\n            </div>\n            <form className=\"tasks__list__search\" onSubmit={event => onSubmit(event)}>\n                <div className=\"search__filters__block\">\n                    <label className=\"filters__label\"> status\n                        <select className=\"filters__select\"\n                                onChange={event => onChange(event)}\n                                name='status'\n                                value={status}>\n                            <option className=\"filters__select__option\">open</option>\n                            <option className=\"filters__select__option\">done</option>\n                            <option className=\"filters__select__option\">in_process</option>\n                        </select>\n                    </label>\n                    <label className=\"filters__label\"> payment\n                        <select className=\"filters__select\"\n                                onChange={event => onChange(event)}\n                                name='payment'\n                                value={payment}>\n                            <option className=\"filters__select__option\">0+</option>\n                            <option className=\"filters__select__option\">1000+</option>\n                            <option className=\"filters__select__option\">2000+</option>\n                            <option className=\"filters__select__option\">5000+</option>\n                            <option className=\"filters__select__option\">10000+</option>\n                            <option className=\"filters__select__option\">25000+</option>\n                        </select>\n                    </label>\n                    <input className='publication__date__input'\n                           name='publication_date'\n                           value={publication_date}\n                           onChange={event => onChange(event)}/>\n                    <input className='deadline__input'\n                           name='deadline'\n                           value={deadline}\n                           onChange={event => onChange(event)}/>\n                    <label className='tasks__checkbox__label'> My Tasks\n                        <input type='checkbox'\n                               className='tasks__checkbox'\n                               name='email'\n                               value={email}\n                               onChange={event => handleCheckbox(event)}/>\n                    </label>\n                </div>\n                <div className=\"search__input__block\">\n                    <label className=\"search__input__label\">\n                        <input className=\"search__input\"\n                               onChange={event => onChange(event)}\n                               name='title'\n                               value={title}/>\n                    </label>\n                </div>\n            </form>\n            {displayTasks()}\n            <Pagination count={count}\n                        itemsPerPage={3}\n                        currentPage={currentPage}\n                        changePage={changePage}\n                        nextPage={showNextPage}\n                        prevPage={showPrevPage}\n            />\n        </div>\n    )\n}\n\nexport default TasksList\n\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/Chat.js",["130","131","132","133","134","135","136","137","138","139","140"],"import React, {Component, useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon, MDBBtn }\n    from \"mdbreact\";\nimport \"./Chat.css\"\nimport axios from \"axios\";\nimport WebSocketInstance from \"./websocket\";\n\n\nconst data = {\nfriends: [\n{\nname: \"John Doe\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-8\",\nmessage: \"Hello, Are you there?\",\nwhen: \"Just now\",\ntoRespond: 1,\nseen: false,\nactive: true\n},\n{\nname: \"Danny Smith\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-1\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Alex Steward\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-2\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Ashley Olsen\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-3\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Kate Moss\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-4\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: true,\nactive: false\n},\n{\nname: \"Lara Croft\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Brad Pitt\",\nmessage: \"Lorem ipsum dolor sit\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: true,\nactive: false\n},\n{\nname: \"Ken Ditto\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/img(3).jpg\",\nmessage: \"Hello, Are you there?\",\nwhen: \"Yesterday\",\ntoRespond: 0,\nseen: false,\nactive: false\n},\n{\nname: \"Marta Wozniak\",\nmessage: \"Lorem ipsum dolor sit.\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/img(2).jpg\",\nwhen: \"5 min ago\",\ntoRespond: 0,\nseen: false,\nactive: false\n}\n],\nmessages: [\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"12 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n},\n{\nauthor: \"Lara Croft\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"13 mins ago\",\nmessage:\n\" Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n},\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"14 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n},\n{\nauthor: \"Lara Croft\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-5\",\nwhen: \"16 mins ago\",\nmessage:\n\" Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n},\n{\nauthor: \"Brad Pitt\",\navatar: \"https://mdbootstrap.com/img/Photos/Avatars/avatar-6\",\nwhen: \"17 mins ago\",\nmessage:\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\"\n}\n]\n}\n\n\nclass Chat3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n}\n\n\n\nconst Chat2 = ({ setChats, messages, members }) => {\n    const [message, setMessage] = useState('')\n    const { id } = useParams()\n    const email = localStorage.getItem('email')\n    const token = localStorage.getItem('token')\n    useEffect(() => {\n        setChats(email, token)\n    }, [id])\n\n    const renderMessages = messages => {\n        return (\n            <MDBListGroup className=\"list-unstyled pl-3 pr-3\">\n                {messages.map(message => (\n                    <Message2 key={message.from_user.id + message.send_date}\n                              first_name={message.from_user.first_name}\n                              last_name={message.from_user.last_name}\n                              send_date={message.send_date}\n                              content={message.content}\n                    />\n                    //<Message key={message.from_user + message.send_date} message={message} />\n                ))}\n            </MDBListGroup>\n        )\n    }\n\n    const sendMessageHandler = event => {\n        event.preventDefault()\n        const messageObj = {\n            from_user: email,\n            content: message,\n\n        }\n    }\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\n\nconst Message2 = ({ first_name, last_name, send_date, content }) => {\n    return (\n        <li className=\"chat-message d-flex justify-content-between mb-4\">\n            <MDBCard>\n              <MDBCardBody>\n                <div>\n                  <strong className=\"primary-font\">{first_name} {last_name}</strong>\n                  <small className=\"pull-right text-muted\">\n                    <i className=\"far fa-clock\" /> {send_date}\n                  </small>\n                </div>\n                <hr />\n                <p className=\"mb-0\">{content}</p>\n              </MDBCardBody>\n            </MDBCard>\n        </li>\n    )\n}\n\n\n\n\nconst Chat = () => {\n    //const data = props\n\n    return (\n        <MDBCard className=\"grey lighten-3 chat-room\">\n        <MDBCardBody>\n             <MDBRow className=\"px-lg-2 px-2\">\n                 <MDBCol md=\"6\" xl=\"4\" className=\"px-0 mb-4 mb-md-0 scrollable-friends-list\">\n                    <h6 className=\"font-weight-bold mb-3 text-lg-left\">Member</h6>\n                      <div className=\"white z-depth-1 p-3\">\n                        <MDBListGroup className=\"friend-list\">\n                          {data.friends.map(friend => (\n                          <User key={friend.name} friend={friend} />\n                          ))}\n                        </MDBListGroup>\n                      </div>\n                 </MDBCol>\n                 <MDBCol md=\"6\" xl=\"8\" className=\"pl-md-3 mt-4 mt-md-0 px-lg-auto\">\n                    <div className=\"scrollable-chat\">\n\n                        <MDBListGroup className=\"list-unstyled pl-3 pr-3\">\n                          {data.messages.map(message => (\n                          <Message key={message.author + message.when} message={message} />\n                          ))}\n                        </MDBListGroup>\n\n                    </div>\n                     <div className=\"form-group basic-textarea\">\n                         <textarea className=\"form-control pl-2 my-0\" id=\"exampleFormControlTextarea2\" rows=\"3\"\n                            placeholder=\"Type your message here...\" />\n                    {/*    <MDBBtn*/}\n                    {/*          color=\"info\"*/}\n                    {/*          rounded*/}\n                    {/*          size=\"sm\"*/}\n                    {/*          className=\"float-right mt-4\"*/}\n                    {/*    >*/}\n                    {/*        Send*/}\n                    {/*</MDBBtn>*/}\n                  </div>\n                </MDBCol>\n              </MDBRow>\n            </MDBCardBody>\n      </MDBCard>\n    )\n}\n\n\n\n\n\nconst Message = ({ message: { author, avatar, when: send_date, message } }) => {\n    return (\n        <li className=\"chat-message d-flex justify-content-between mb-4\">\n\n    <MDBCard>\n      <MDBCardBody>\n        <div>\n          <strong className=\"primary-font\">{author}</strong>\n          <small className=\"pull-right text-muted\">\n            <i className=\"far fa-clock\" /> {send_date}\n          </small>\n        </div>\n        <hr />\n        <p className=\"mb-0\">{message}</p>\n      </MDBCardBody>\n    </MDBCard>\n  </li>\n    )\n}\n\n\nconst User = ({friend: { name, avatar, message, when, toRespond, seen, active }\n}) => {\n    return (\n        <MDBListGroupItem\n    href=\"#!\"\n    className=\"d-flex justify-content-between p-2 border-light\"\n    style={{ backgroundColor: active ? \"#eeeeee\" : \"\" }}\n  >\n\n    <div style={{ fontSize: \"0.95rem\" }}>\n      <strong>{name}</strong>\n      <p className=\"text-muted\">{message}</p>\n    </div>\n    <div>\n      <p className=\"text-muted mb-0\" style={{ fontSize: \"0.75rem\" }}>\n        {when}\n      </p>\n      {seen ? (\n        <span className=\"text-muted float-right\">\n          <MDBIcon className=\"fa-check\" aria-hidden=\"true\" />\n        </span>\n      ) : toRespond ? (\n        <MDBBadge color=\"danger\" className=\"float-right\">\n          {toRespond}\n        </MDBBadge>\n      ) : (\n        <span className=\"text-muted float-right\">\n          <MDBIcon icon=\"reply\" aria-hidden=\"true\" />\n        </span>\n      )}\n    </div>\n  </MDBListGroupItem>\n    )\n}\n\nexport default Chat\n\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Reply.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/SideBar.js",["141"],"import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./SideBar.css\"\n\n\nconst SideBar = () => {\n\n    const [showDropdown, setShowDropdown] = useState(true)\n\n    const showDropdownMenu = event => {\n        event.preventDefault()\n        setShowDropdown(!showDropdown)\n    }\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__items\">\n                <div className=\"sidebar__item\">Logo</div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"/\">Profile</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"/tasks\">Tasks</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"#\">In Process Tasks</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"#\">Solved Tasks</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"#\">Failed Tasks</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"/tasks/create\">New Task</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"/signup\">Sign Up</Link></div>\n                <div className=\"sidebar__item\"><Link className=\"item__link\" to=\"/signin\">Sign In</Link></div>\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/tasks/Task.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/Pagination.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/containers/chat/websocket.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/auth.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/StartedPage.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/actions/types.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/components/started_page/NavBar.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/store.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/index.js",[],"/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/auth.js",["142"],"import {\n    SIGN_IN_SUCCESS,\n    SIGN_IN_FAIL,\n    SIGN_UP_SUCCESS,\n    SIGN_UP_FAIL,\n    LOGOUT\n} from \"../../../../promotion_system/frontend/src/actions/types\";\n\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n        case SIGN_IN_SUCCESS:\n            localStorage.setItem('token', payload.access)\n            localStorage.setItem('id', payload.user.id)\n            localStorage.setItem('email', payload.user.email)\n            localStorage.setItem('phone', payload.user.phone)\n            localStorage.setItem('first_name', payload.user.first_name)\n            localStorage.setItem('last_name', payload.user.last_name)\n            return {\n                ...state,\n                token: payload.access,\n                loading: false,\n                isAuthenticated: true\n            }\n        case SIGN_UP_SUCCESS:\n            return {\n                ...state,\n                loading: true,\n                isAuthenticated: false\n            }\n        case SIGN_UP_FAIL:\n        case SIGN_IN_FAIL:\n        case LOGOUT:\n            localStorage.clear()\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: false,\n                token: null\n            }\n        default: return state\n    }\n}\n","/home/vladimir/PycharmProjects/promotion_system/frontend/src/reducers/chat.js",["143","144"],"import {\n    GET_CHATS_SUCCESS,\n    GET_CHATS_FAIL,\n    ADD_MESSAGE,\n    SET_MESSAGES\n} from \"../../../../promotion_system/frontend/src/actions/types\";\n\n\nconst initialState = {\n    members: [],\n    messages: []\n}\n\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n        case GET_CHATS_SUCCESS:\n            return {\n                ...state,\n                members: payload.members,\n                messages: payload.messages\n            }\n        case ADD_MESSAGE:\n            return {\n                ...state,\n                messages: [...state.messages, payload]\n            }\n        case SET_MESSAGES:\n            return {\n                ...state,\n                messages: payload.reverse()\n            }\n\n        default: return state\n    }\n}\n\n",["145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":34,"column":8,"nodeType":"153","endLine":34,"endColumn":10,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":84,"column":21,"nodeType":"157","endLine":84,"endColumn":34},{"ruleId":"158","severity":1,"message":"159","line":15,"column":52,"nodeType":"160","messageId":"161","endLine":15,"endColumn":60},{"ruleId":"151","severity":1,"message":"162","line":109,"column":8,"nodeType":"153","endLine":109,"endColumn":10,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"158","severity":1,"message":"165","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},{"ruleId":"151","severity":1,"message":"166","line":40,"column":8,"nodeType":"153","endLine":40,"endColumn":17,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"168","line":1,"column":16,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"169","line":3,"column":99,"nodeType":"160","messageId":"161","endLine":3,"endColumn":105},{"ruleId":"158","severity":1,"message":"170","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":13},{"ruleId":"158","severity":1,"message":"171","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":25},{"ruleId":"158","severity":1,"message":"172","line":134,"column":7,"nodeType":"160","messageId":"161","endLine":134,"endColumn":12},{"ruleId":"158","severity":1,"message":"173","line":146,"column":7,"nodeType":"160","messageId":"161","endLine":146,"endColumn":12},{"ruleId":"158","severity":1,"message":"174","line":147,"column":21,"nodeType":"160","messageId":"161","endLine":147,"endColumn":31},{"ruleId":"151","severity":1,"message":"175","line":153,"column":8,"nodeType":"153","endLine":153,"endColumn":12,"suggestions":"176"},{"ruleId":"158","severity":1,"message":"177","line":155,"column":11,"nodeType":"160","messageId":"161","endLine":155,"endColumn":25},{"ruleId":"158","severity":1,"message":"178","line":171,"column":11,"nodeType":"160","messageId":"161","endLine":171,"endColumn":29},{"ruleId":"158","severity":1,"message":"179","line":173,"column":15,"nodeType":"160","messageId":"161","endLine":173,"endColumn":25},{"ruleId":"158","severity":1,"message":"180","line":10,"column":11,"nodeType":"160","messageId":"161","endLine":10,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":16,"column":1,"nodeType":"183","endLine":51,"endColumn":2},{"ruleId":"158","severity":1,"message":"184","line":3,"column":5,"nodeType":"160","messageId":"161","endLine":3,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":15,"column":1,"nodeType":"183","endLine":38,"endColumn":2},{"ruleId":"147","replacedBy":"185"},{"ruleId":"149","replacedBy":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'userEmail'. Either include them or remove the dependency array.","ArrayExpression",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'customer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.",["190"],"'store' is defined but never used.","'StartedPage' is defined but never used.","React Hook useEffect has missing dependencies: 'deadline', 'email', 'payment', 'publication_date', 'status', and 'title'. Either include them or remove the dependency array.",["191"],"'Component' is defined but never used.","'MDBBtn' is defined but never used.","'axios' is defined but never used.","'WebSocketInstance' is defined but never used.","'Chat3' is defined but never used.","'Chat2' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email', 'setChats', and 'token'. Either include them or remove the dependency array. If 'setChats' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"'renderMessages' is assigned a value but never used.","'sendMessageHandler' is assigned a value but never used.","'messageObj' is assigned a value but never used.","'showDropdownMenu' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'GET_CHATS_FAIL' is defined but never used.",["187"],["188"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [config, userEmail]",{"range":"201","text":"202"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"203","text":"204"},"Update the dependencies array to be: [deadline, email, filters, payment, publication_date, status, title]",{"range":"205","text":"206"},"Update the dependencies array to be: [email, id, setChats, token]",{"range":"207","text":"208"},[1008,1010],"[config, userEmail]",[3563,3565],"[props.match.params.slug]",[1377,1386],"[deadline, email, filters, payment, publication_date, status, title]",[3568,3572],"[email, id, setChats, token]"]